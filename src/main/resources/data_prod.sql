CREATE DATABASE prodcapeelectricdb;
use prodcapeelectricdb;

---------> Users Table <------------

CREATE TABLE users(    
			user_id INTEGER NOT NULL, 
			user_active BOOLEAN,
			creation_date DATETIME,
			email VARCHAR(255),
			first_name VARCHAR(255),
			last_name VARCHAR(255),
			password VARCHAR(255),
			user_role VARCHAR(255),
			user_exist BOOLEAN,
			user_name VARCHAR(255),
			user_type VARCHAR(255),
			updated_date DATETIME,
			one_time_password INTEGER
			PRIMARY KEY (user_id)
	);
	
--------> Country Table with insert queries <------------

CREATE TABLE country_table (
			COUNTRY_ID INTEGER NOT NULL, 
			NAME VARCHAR(255), 
			CODE VARCHAR(255), 
			CONSTRAINT PK_COUNTRY_ID PRIMARY KEY(COUNTRY_ID)
);

			INSERT INTO country_table VALUES (1, 'INDIA', 'IND');
			INSERT INTO country_table VALUES (2, 'UNITED STATES OF AMERICA', 'USA');
			INSERT INTO country_table VALUES (3, 'BANGLADESH', 'BGL');
			INSERT INTO country_table VALUES (4, 'SRILANKA', 'SRI');
			INSERT INTO country_table VALUES (5, 'UNITED KINGDOM', 'UK');
			INSERT INTO country_table VALUES (6, 'PAKISTAN', 'PAK');
			INSERT INTO country_table VALUES (7, 'AFGANISTAN', 'AFG');
			INSERT INTO country_table VALUES (8, 'MALDIVES', 'MDV');
			INSERT INTO country_table VALUES (9, 'UNITED ARAB EMIRATES', 'UAE');
			INSERT INTO country_table VALUES (10, 'CHINA', 'CHN');
			INSERT INTO country_table VALUES (11, 'SINGAPORE', 'SGP');
			INSERT INTO country_table VALUES (12, 'THAILAND', 'THL');
			INSERT INTO country_table VALUES (13, 'AUSTRALIA', 'AUS');
			INSERT INTO country_table VALUES (14, 'NEW ZEALAND', 'NZL');
			INSERT INTO country_table VALUES (15, 'JAPAN', 'JPN');
			INSERT INTO country_table VALUES (16, 'INDONESIA', 'INA');
			INSERT INTO country_table VALUES (17, 'MALAYSIA', 'MLY');
			INSERT INTO country_table VALUES (18, 'GERMANY', 'GNY');
			INSERT INTO country_table VALUES (19, 'FRANCE', 'FRN');
			INSERT INTO country_table VALUES (20, 'RUSSIA', 'RUS');
			INSERT INTO country_table VALUES (21, 'NEPAL', 'NPL');

--------> State Table with insert queries <------------

CREATE TABLE state_table (
			STATE_ID INT NOT NULL, 
			COUNTRY_ID INT, 
			NAME VARCHAR(255), 
			CODE VARCHAR(255),
			CONSTRAINT PK_STATE_ID PRIMARY KEY(STATE_ID),
			CONSTRAINT FK_COUNTRY_ID FOREIGN KEY (COUNTRY_ID) REFERENCES country_table(COUNTRY_ID) ON DELETE CASCADE
);

			INSERT INTO state_table VALUES (1,1,'Tamil Nadu','TN');
			INSERT INTO state_table VALUES (2,1,'Andhra Pradesh','AP');
			INSERT INTO state_table VALUES (3,1,'Telengana','TS');
			INSERT INTO state_table VALUES (4,1,'Karnataka','KA');
			INSERT INTO state_table VALUES (5,1,'Kerala','KL');
			INSERT INTO state_table VALUES (6,1,'Odisha','OR');
			INSERT INTO state_table VALUES (7,1,'Maharastra','MH');
			INSERT INTO state_table VALUES (8,1,'Madhya Pradesh','MP');
			INSERT INTO state_table VALUES (9,1,'Chattisgarh','CG');
			INSERT INTO state_table VALUES (10,1,'Jharkand','JD');
			INSERT INTO state_table VALUES (11,1,'Bihar','BH');
			INSERT INTO state_table VALUES (12,1,'Uttar Pradesh','UP');
			INSERT INTO state_table VALUES (13,1,'Gujarat','GU');
			INSERT INTO state_table VALUES (14,1,'Rajasthan','RJ');
			INSERT INTO state_table VALUES (15,1,'Punjab','PB');
			INSERT INTO state_table VALUES (16,1,'Haryana','HR');
			INSERT INTO state_table VALUES (17,1,'Uttarkhand','UT');
			INSERT INTO state_table VALUES (18,1,'Sikkim','SK');
			INSERT INTO state_table VALUES (19,1,'West Bengal','WB');
			INSERT INTO state_table VALUES (20,1,'Assam','AS');
			INSERT INTO state_table VALUES (21,1,'Arunachal Pradesh','AR');
			INSERT INTO state_table VALUES (22,1,'Nagaland','NG');
			INSERT INTO state_table VALUES (23,1,'Tripura','TP');
			INSERT INTO state_table VALUES (24,1,'Meghalaya','MG');
			INSERT INTO state_table VALUES (25,1,'Mizoram','MZ');
			INSERT INTO state_table VALUES (26,1,'Manipur','GU');
			INSERT INTO state_table VALUES (27,1,'Goa','GA');
			INSERT INTO STATE_TABLE VALUES (28,2,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (29,21,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (30,3,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (31,4,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (32,5,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (33,6,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (34,7,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (35,8,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (36,9,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (37,10,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (38,11,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (39,12,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (40,13,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (41,14,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (42,15,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (43,16,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (44,17,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (45,18,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (46,19,'Others','OT');
            INSERT INTO STATE_TABLE VALUES (47,20,'Others','OT');
			INSERT INTO state_table VALUES (48,1,'NewDelhi','DE');
			INSERT INTO state_table VALUES (49,1,'Puducherry','PO');
			INSERT INTO state_table VALUES (50,1,'Daman and Diu','DA');
			INSERT INTO state_table VALUES (51,1,'Dadra and Nagar Haveli','DN');
			INSERT INTO state_table VALUES (52,1,'Himachal Pradesh','HP');
			INSERT INTO state_table VALUES (53,1,'Jammu and Kashmir','JK');
			INSERT INTO state_table VALUES (54,1,'Ladakh','LH');
			INSERT INTO state_table VALUES (55,1,'Chandigarh','CH');
			INSERT INTO state_table VALUES (56,1,'Lakshadeep','LK');
			
			
			
			

--------> Applicationtypes Table with insert queries <------------

CREATE TABLE applicationtypes(
			ID INTEGER NOT NULL, 
			APPLICATION VARCHAR(255), 
			CODE VARCHAR(20), 
			PRIMARY KEY(ID),
			APPLICATION_NAME VARCHAR(10)

);

			 INSERT INTO APPLICATIONTYPES VALUES  (1,'Verification Of LV Systems (IEC 60364-6)', 'LV Systems','LV');
			 INSERT INTO APPLICATIONTYPES VALUES  (2,'Verification Of HV Systems (up to 33 kV) (IEC 61936-1)', 'HV Systems','HV');
			 INSERT INTO APPLICATIONTYPES VALUES  (3,'Lightning Protection Conformity Assessment, Risk Assessment, Inspection And Maintenance (IEC 62305-3 & 4)', 'Risk Assessment', 'RIA');
			 INSERT INTO APPLICATIONTYPES VALUES  (4,'EMC Assessment Of An Installation (IEC 61000-5-1)', 'EMC Assessment','EMC');
			 INSERT INTO APPLICATIONTYPES VALUES  (5,'Failure Analysis Of Electronic Systems', 'Failure Analysis','FAS');
			 INSERT INTO APPLICATIONTYPES VALUES  (6,'Conformity And Project Analysis', 'Conformity Project','CPA');
		     INSERT INTO APPLICATIONTYPES VALUES  (7,'Testing Inspection and Certification of Lightning protection system', 'LPS System', 'LPS');
		     INSERT INTO APPLICATIONTYPES VALUES  (8,'Single Line Diagram', 'SLD Diagram', 'SLD');

--------> Site Table <------------

CREATE TABLE site_table (
		    SITE_ID INT AUTO_INCREMENT,
			SITE_CODE VARCHAR(255) NOT NULL,
		    USER_NAME VARCHAR(255),
			SITE VARCHAR(255) NOT NULL,
			COMPANY_NAME VARCHAR(255) NOT NULL,
			DEPARTMENT_NAME VARCHAR(255) NOT NULL,
			ADDRESSLINE_1 VARCHAR(255) NOT NULL,
			ADDRESSLINE_2 VARCHAR(255) NULL,
			LAND_MARK VARCHAR(255) NULL,
			CITY VARCHAR(255) NULL,
			STATE VARCHAR(255) NOT NULL,
			COUNTRY VARCHAR(255) NOT NULL,
			ZIP_CODE VARCHAR(255) NOT NULL,
			ALL_STEPS_COMPLETED VARCHAR(255),
			SITE_ASSIGNED_TO VARCHAR(255) NOT NULL,
			CREATED_BY VARCHAR(255) NOT NULL,
		    UPDATED_BY VARCHAR(255) NOT NULL,
		    CREATED_DATE datetime NOT NULL,    
		    UPDATED_DATE datetime NOT NULL,
			CONSTRAINT PK_SITE_ID PRIMARY KEY(SITE_ID),
);

CREATE TABLE site_person_table(
			 PERSON_ID INT AUTO_INCREMENT,
			 SITE_NAME VARCHAR(255),
			 SITE_ID INT,
			 IN_ACTIVE BIT,
			 PERSON_INCHARGE VARCHAR(255),
			 E_mail VARCHAR(255) NOT NULL,
			 DESIGNATION VARCHAR(255),
			 CONTACT_NO VARCHAR(255),
			 CONSTRAINT PK_PERSON_ID PRIMARY KEY(PERSON_ID),
			 CONSTRAINT FK_SITE_ID FOREIGN KEY (SITE_ID) REFERENCES SITE_TABLE(SITE_ID) ON DELETE CASCADE
 );



--------> Part_1  Basic information


CREATE TABLE report_details_table (
		    REPORT_ID INT AUTO_INCREMENT,
		    SITE_ID INT,
			USER_NAME VARCHAR(255),
			DESCRIPTION_REPORT VARCHAR(500),
			REASON_REPORT VARCHAR(500),
			INSTALLATION_TYPE VARCHAR(255),
			DESCRIPTION_PREMISE VARCHAR(255) ,
			ESTIMATED_WIRE_AGE VARCHAR(255),
			EVIDANCE_ADDITION VARCHAR(255),
			EVIDANCE_WIRE_AGE VARCHAR(255),
		    PREVIOUS_RECORDS VARCHAR(255),
		    LAST_INSPECTION VARCHAR(255),
		    NEXT_INSPECTION VARCHAR(255),	
		    EXTENT_INSTALLATION VARCHAR(500),
		    CLIENT_DETAILS VARCHAR(500),
		    INSTALLATION_DETAILS VARCHAR(500),
		    VERIFICATION_DATE VARCHAR(500),  
		    VERIFIED_ENGINEER VARCHAR(255),
		    DESIGNATION VARCHAR(255) ,
		    COMPANY VARCHAR(255),
		    INSPECTOR_DESIGNATION VARCHAR(255),
		    INSPECTOR_COMPANYNAME VARCHAR(255),
		    LIMITATIONS VARCHAR(255),
			CREATED_BY VARCHAR(255),
		    CREATED_DATE datetime,
		    UPDATED_BY VARCHAR(255),
            UPDATED_DATE datetime,
		    CONSTRAINT PK_REPORT_ID PRIMARY KEY(REPORT_ID)
 );
 
 CREATE TABLE sign_details_table (
            SIGNATOR_ID INT AUTO_INCREMENT,
            REPORT_ID INT,
			SIGNATOR_ROLE VARCHAR(255),
			PERSON_NAME VARCHAR(255),
			PERSON_CONTACT_NO VARCHAR(255),
			PERSON_MAIL_ID VARCHAR(255),
			MANAGER_NAME VARCHAR(255),
			MANAGER_CONTACT_NO VARCHAR(255),
			MANAGER_MAIL_ID VARCHAR(255),
			COMPANY_NAME VARCHAR(255),
			ADDRESS_LINE1 VARCHAR(255),
			ADDRESS_LINE2 VARCHAR(255),
			LAND_MARK VARCHAR(255),
			STATE VARCHAR(255),
			PIN_CODE VARCHAR(255),
			COUNTRY VARCHAR(255),
			DECLARATION_DATE VARCHAR(255),
			DECLARATION_NAME VARCHAR(255),
			DECLARATION_SIGNATURE LONGTEXT,
			SIGNATOR_STATUS VARCHAR(20),
			CONSTRAINT PK_SIGNATOR_ID PRIMARY KEY(SIGNATOR_ID),
			CONSTRAINT FK_REPORT_ID FOREIGN KEY (REPORT_ID) REFERENCES REPORT_DETAILS_TABLE(REPORT_ID) ON DELETE CASCADE
);
 
CREATE TABLE reportdetails_comments_table(

		   COMMENTS_ID INT AUTO_INCREMENT,
		   REPORT_ID INT,
		   VIEWER_USERNAME VARCHAR(225),
		   INSPECTOR_USERNAME VARCHAR(225),
		   VIEWER_EMAIL VARCHAR(225),
		   INSPECTOR_EMAIL VARCHAR(225),
		   SITE_NAME VARCHAR(225),
		   VIEWER_COMMENT VARCHAR(500),
		   VIEWER_UPDATEDATE VARCHAR(225),
		   INSPECTOR_COMMENT VARCHAR(500),
           INSPECTOR_UPDATEDATE VARCHAR(225),		
           COMMENT_APPROVE_OR_REJECT VARCHAR(225),
           VIEWER_FLAG VARCHAR(225),
           INSPECTOR_FLAG VARCHAR(225),
           NO_OF_COMMENT INT,
		   CONSTRAINT PK_COMMENTS_ID PRIMARY KEY(COMMENTS_ID),
		   CONSTRAINT FK_COMMENTS_REPORT_ID FOREIGN KEY (REPORT_ID) REFERENCES REPORT_DETAILS_TABLE(REPORT_ID) ON DELETE CASCADE

);
 



--------> Part_2 Supply characteristics and earthing arrangement API.

CREATE TABLE supply_characteristics_table (

            SUPPLY_CHARACTERISTICS_ID INT AUTO_INCREMENT,
			SITE_ID INT,
			USER_NAME VARCHAR(255),
            SHORT_NAME VARCHAR(255),
            MAIN_SYSTEM_EARTING VARCHAR(255),
            SYSTEM_EARTH_BNOTE VARCHAR(255),
            LIVE_CONDUCTOR_TYPE VARCHAR(255),
            LIVE_CONDUCTOR_AC VARCHAR(255),
            LIVE_CONDUCTOR_DC VARCHAR(255),
            LIVE_CONDUCTOR_BNOTE VARCHAR(255),
            MAIN_NOMINAL_CAPACITY VARCHAR(255),
            MAIN_ACTUALLOAD VARCHAR(255),
            MAIN_NOMINAL_VOLTAGE VARCHAR(255),
            MAIN_NOMINAL_FREQUENCY VARCHAR(255),
            MAIN_FAULT_CURRENT VARCHAR(255),
            MAIN_LOOP_IMPEDANCE VARCHAR(255),
            MAIN_CURRENT_PROTECTIVE_DEVICE VARCHAR(255),
            MAIN_RATED_CURRENT VARCHAR(255),
            MAIN_CURRENT_DISCONNECTION VARCHAR(255),
            AL_AVILABLE_SUPPLY VARCHAR(255),
            AL_NUM_SUPPLY VARCHAR(255),
            MAXIMUM_DEMAND VARCHAR(255),
            MAXIMUM_LOAD VARCHAR(255),
            MEANS_EARTHING VARCHAR(255),
            EARTHING_REMARKS VARCHAR(255),
            ELECTORDE_TYPE VARCHAR(255),
            ELECTORDE_MATERIAL VARCHAR(255),
            NUM_LOCATION INT,
            CONDUCTOR_SIZE VARCHAR(255),
            CONDUCTOR_MATERIAL VARCHAR(255),
            CONDUCTOR_VERIFY VARCHAR(255),
            BONDING_CONDUCTOR_SIZE VARCHAR(255),
            BONDING_CONDUCTOR_MATERIAL VARCHAR(255),
            BONDING_CONDUCTOR_VERIFY VARCHAR(255),
            BONDING_JOINTS_TYPE VARCHAR(255),
            BONDING_NO_OF_JOINTS INT,
            EARTHING_CONDUCTOR_SIZE VARCHAR(255),
            EARTHING_CONDUCTOR_MATERIAL VARCHAR(255),
            EARTHING_CONDUCTOR_VERIFY VARCHAR(255),
            EARTHING_JOINTS_TYPE VARCHAR(255),
            EARTHING_NO_OF_JOINTS INT,
            EARTHING_NO_OF_JOINTS_OB  VARCHAR(500),
            BONDING_NO_OF_JOINTS_OB  VARCHAR(500),
            INSTALLOCATION_REPORT_OB  VARCHAR(500),
            CREATED_BY VARCHAR(255),
		    CREATED_DATE datetime,
		    UPDATED_BY VARCHAR(255),
            UPDATED_DATE datetime,
            CONSTRAINT PK_SUPPLY_CHARACTERISTICS_ID PRIMARY KEY(SUPPLY_CHARACTERISTICS_ID)
              
);
 
CREATE TABLE supply_parameters_table (

            SUPPLY_PARAMETERS_ID INT AUTO_INCREMENT,
            SUPPLY_CHARACTERISTICS_ID INT,
            AL_SYSTEM_EARTING VARCHAR(255),
            AL_SUPPLY_NO VARCHAR(255),
            AL_SUPPLY_STNAME VARCHAR(255),
            AL_SYSTEM_EARTING_BNOTE VARCHAR(255),
            AL_LIVECONDUCTOR_TYPE VARCHAR(255),
            AL_LIVECONDUCTOR_AC VARCHAR(255),
            AL_LIVECONDUCTOR_DC VARCHAR(255),
            AL_LIVECONDUCTOR_BNOTE VARCHAR(255),
             AL_NOMINAL_VOLTAGE VARCHAR(255),
            AL_NOMINAL_FREQUENCY VARCHAR(255),
            AL_FAULT_CURRENT VARCHAR(255),
            AL_LOOP_IMPEDANCE VARCHAR(255),
            AL_INSTALLED_CAPACITY VARCHAR(255),
            AL_ACTUAL_LOAD VARCHAR(255) ,
            AL_PROTECTIVE_DEVICE VARCHAR(255),
            AL_RATED_CURRNT VARCHAR(255),
            AL_CURRENT_DISCONNECTION VARCHAR(255),
            SUPPLY_PARAMETER_STATUS VARCHAR(255),
            CONSTRAINT PK_SUPPLY_PARAMETERS_ID PRIMARY KEY(SUPPLY_PARAMETERS_ID),
            CONSTRAINT FK_SUPPLY_CHARACTERISTICS_ID FOREIGN KEY (SUPPLY_CHARACTERISTICS_ID) REFERENCES SUPPLY_CHARACTERISTICS_TABLE(SUPPLY_CHARACTERISTICS_ID) ON DELETE CASCADE

 );
 
  CREATE TABLE circuit_breaker_table (
 
            CIRCUIT_BREAKER_ID INT AUTO_INCREMENT, 
            SUPPLY_CHARACTERISTICS_ID INT,
            LOCATION VARCHAR(255),
            SOURCE_NAME VARCHAR(255),
            MAKE VARCHAR(255),
            CURRENT_CURVE VARCHAR(255),
            TYPE VARCHAR(255),
            POLES_NO VARCHAR(255),
            CURRRENT VARCHAR(255),
            VOLTAGE VARCHAR(255),
            FUSE VARCHAR(255),
            TYPE_OF_RESIDUALCURRENT  VARCHAR(255),
            RESIDUAL_CURRENT VARCHAR(255),
            RESIDUAL_TIME VARCHAR(255),
            CIRCUIT_STATUS VARCHAR(255),
            CONSTRAINT PK_CIRCUIT_BREAKER_ID PRIMARY KEY(CIRCUIT_BREAKER_ID),
            CONSTRAINT FK_CIRCUIT_BREAKER_SUPPLY_CHARACTERISTICS_ID FOREIGN KEY (SUPPLY_CHARACTERISTICS_ID) REFERENCES SUPPLY_CHARACTERISTICS_TABLE(SUPPLY_CHARACTERISTICS_ID) ON DELETE CASCADE
                   
);

CREATE TABLE installation_location_table (
            INSTALLATION_LOCATION_REPORT_ID INT AUTO_INCREMENT,
            SUPPLY_CHARACTERISTICS_ID INT,
            LOCATION_NO VARCHAR(255),
            LOCATION_NAME VARCHAR(500),
            MEANS_EARTHING_REMARK VARCHAR(500),
            ELECTRODE_EARTH_TYPE VARCHAR(255),
            ELECTRODE_EARTH_MATERIAL VARCHAR(255),
            ELECTRODE_EARTH_DEPTH VARCHAR(255),
            ELECTRODE_EARTH_SIZE VARCHAR(255),
            ELECTORDE_RESISTANCE_EARTH VARCHAR(500),
            ELECTORDE_RESISTANCE_GRID VARCHAR(255),
            INSTALLOCATIONREPORT_STATUS VARCHAR(255),
            CONSTRAINT PK_INSTALLATION_LOCATION_REPORT_ID PRIMARY KEY(INSTALLATION_LOCATION_REPORT_ID),
            CONSTRAINT FK_INSTALLATION_LOCATION_REPORTS_SUPPLY_CHARACTERISTICS_ID FOREIGN KEY (SUPPLY_CHARACTERISTICS_ID) REFERENCES SUPPLY_CHARACTERISTICS_TABLE(SUPPLY_CHARACTERISTICS_ID) ON DELETE CASCADE


 );

 CREATE TABLE bounding_location_reports_table (
            BOUNDING_REPORT_ID INT AUTO_INCREMENT,
            SUPPLY_CHARACTERISTICS_ID INT,
			LOCATION VARCHAR(255),
			JOINT_NO VARCHAR(255),
			JOINT_REFERENCE VARCHAR(255),
            JOINT_RESISTANCE VARCHAR(255) ,
            INSTALLOCATIONREPORT_STATUS VARCHAR(255),
            CONSTRAINT PK_BOUNDING_LOCATION_REPORT_ID PRIMARY KEY(BOUNDING_REPORT_ID),
            CONSTRAINT FK_BOUNDING_LOCATION_REPORTS_SUPPLY_CHARACTERISTICS_ID FOREIGN KEY (SUPPLY_CHARACTERISTICS_ID) REFERENCES SUPPLY_CHARACTERISTICS_TABLE(SUPPLY_CHARACTERISTICS_ID) ON DELETE CASCADE


 );
 
  CREATE TABLE earthing_location_reports_table (
            EARTHING_LOCATION_REPORT_ID INT AUTO_INCREMENT,
            SUPPLY_CHARACTERISTICS_ID INT,
			LOCATION VARCHAR(255),
			JOINT_NO VARCHAR(255),
			JOINT_REFERENCE VARCHAR(255),
            JOINT_RESISTANCE VARCHAR(255) ,
            INSTALLOCATIONREPORT_STATUS VARCHAR(255),
            CONSTRAINT PK_EARTHING_LOCATION_REPORT_ID PRIMARY KEY(EARTHING_LOCATION_REPORT_ID),
            CONSTRAINT FK_EARTHING_LOCATION_REPORTS_SUPPLY_CHARACTERISTICS_ID FOREIGN KEY (SUPPLY_CHARACTERISTICS_ID) REFERENCES SUPPLY_CHARACTERISTICS_TABLE(SUPPLY_CHARACTERISTICS_ID) ON DELETE CASCADE


 );
 
CREATE TABLE supplycharacteristic_comments_table(

		   COMMENTS_ID INT AUTO_INCREMENT,
		   SUPPLY_CHARACTERISTICS_ID INT,
		   VIEWER_USERNAME VARCHAR(225),
		   INSPECTOR_USERNAME VARCHAR(225),
		   VIEWER_EMAIL VARCHAR(225),
		   INSPECTOR_EMAIL VARCHAR(225),
		   SITE_NAME VARCHAR(225),
		   VIEWER_COMMENT VARCHAR(500),
		   VIEWER_UPDATEDATE VARCHAR(225),
		   INSPECTOR_COMMENT VARCHAR(500),
           INSPECTOR_UPDATEDATE VARCHAR(225),		
           COMMENT_APPROVE_OR_REJECT VARCHAR(225),
           VIEWER_FLAG VARCHAR(225),
           INSPECTOR_FLAG VARCHAR(225),
           NO_OF_COMMENT INT,
		   CONSTRAINT PK_COMMENTS_ID PRIMARY KEY(COMMENTS_ID),
           CONSTRAINT FK_COMMENTS_SUPPLY_CHARACTERISTICS_ID FOREIGN KEY (SUPPLY_CHARACTERISTICS_ID) REFERENCES SUPPLY_CHARACTERISTICS_TABLE(SUPPLY_CHARACTERISTICS_ID) ON DELETE CASCADE

);

CREATE TABLE supply_outer_observation_table(

		   SUPPLY_OUTER_OBSERVATION_ID INT AUTO_INCREMENT,
		   SUPPLY_CHARACTERISTICS_ID INT,
		   OBSERVATION_COMPONENT_DETAILS VARCHAR(225),
		   OBSERVATION_DESCRIPTION VARCHAR(500),
		   SUPPLY_OUTER_OBSERVATION_STATUS VARCHAR(225),
		   CONSTRAINT PK_SUPPLY_OUTER_OBSERVATION_ID PRIMARY KEY(SUPPLY_OUTER_OBSERVATION_ID),
           CONSTRAINT FK_OBSERVATION_SUPPLY_CHARACTERISTICS_ID FOREIGN KEY (SUPPLY_CHARACTERISTICS_ID) REFERENCES SUPPLY_CHARACTERISTICS_TABLE(SUPPLY_CHARACTERISTICS_ID) ON DELETE CASCADE

);

CREATE TABLE supply_alternative_inner_observations_table(

		   SUPPLY_INNER_OBSERVATIONS_ID INT AUTO_INCREMENT,
		   SUPPLY_OUTER_OBSERVATION_ID INT,
		   OBSERVATION_COMPONENT_DETAILS VARCHAR(225),
		   OBSERVATION_DESCRIPTION VARCHAR(500),
		   ALTERNATIVE_INNER_OBSERVATION_STATUS VARCHAR(225),
		   CONSTRAINT PK_SUPPLY_INNER_OBSERVATIONS_ID PRIMARY KEY(SUPPLY_INNER_OBSERVATIONS_ID),
           CONSTRAINT FK_SUPPLY_OUTER_OBSERVATION_ID  FOREIGN KEY (SUPPLY_OUTER_OBSERVATION_ID) REFERENCES SUPPLY_OUTER_OBSERVATION_TABLE(SUPPLY_OUTER_OBSERVATION_ID) ON DELETE CASCADE

);
 
 
--------> part_3  Periodic_inspection
CREATE TABLE periodic_inspection_table(

            PERIODIC_INSPECTION_ID INT AUTO_INCREMENT,
            SITE_ID INT,
			USER_NAME VARCHAR(225),
			CREATED_BY VARCHAR(255),
		    CREATED_DATE datetime,
		    UPDATED_BY VARCHAR(255),
            UPDATED_DATE datetime,
			CONSTRAINT PK_PERIODIC_INSPECTION_ID PRIMARY KEY(PERIODIC_INSPECTION_ID)

);
 CREATE TABLE  ins_ipao_inspection_table (IPAO_INSPECTION_ID INTEGER NOT NULL, 
                                    A_MAIN_PROTECT_BONDING VARCHAR(255), 
									A_ACCESSIBILITY VARCHAR(255), 
									ADDITIONAL_MEASURE VARCHAR(255), 
									ADDITIONAL_PROTECTION VARCHAR(255),
									P_ADEQUATE_ARRANGEMENT VARCHAR(255), 
									A_ALL_APPROPRIATE_LOCATION VARCHAR(255), 
									A_ALL_PROTECT_BONDING VARCHAR(255), 
									P_AUTOMATIC_DISCONNECT_GENERATOR VARCHAR(255), 
									O_BARRIERS_ENCLOSERS VARCHAR(255), 
									O_BASIC_ELECTRICAL_SEPARTION VARCHAR(255), 
									BASIC_PROTECTION VARCHAR(255), 
									P_COMPATIBILITY_CHARACTERISTICS VARCHAR(255), 
									P_CONNECTION_GENERATOR VARCHAR(255),
									O_DOUBLE_INSULATION VARCHAR(255), 
									A_EARTH_CONDUCTOR_CONNECTION VARCHAR(255),
									A_EARTH_ELECTORDE_ARRANGEMENT VARCHAR(255),
									P_EARTHING_ARRANGEMENT VARCHAR(255), 
									ELECTRIC_SHOCK VARCHAR(255), 
									O_FAULT_ELECTRICAL_SEPARTION VARCHAR(255), 
									O_FAULT_NON_CONDUCT_LOCATION VARCHAR(255), 
									FAULT_PROTECTION VARCHAR(255), 
									FAULT_PROTECTION_DESC VARCHAR(255), 
									A_FELV_REQUIREMENT VARCHAR(255),
									INSPECTION_FLAG VARCHAR(255),
									O_INSULATION_LIVE_PARTS VARCHAR(255),
									P_ISOLATE_GENERATOR VARCHAR(255), 
									I_ISOLATOR VARCHAR(255), 
									LIMITED_VALUE VARCHAR(255),
									LOCATION_COUNT INTEGER, 
									LOCATION_NAME VARCHAR(255),
									LOCATION_NUMBER INTEGER, 
									A_MAIN_EARTHING VARCHAR(255),
									MAINS_DISTRIBUTION VARCHAR(255), 
									MAINS_LOCATION VARCHAR(255), 
									MAINS_SOURCE_DETAILS VARCHAR(255), 
									I_METER_CONSUMER VARCHAR(255), 
									I_METER_DISTRIBUTOR VARCHAR(255),
									I_METER_EQU VARCHAR(255), 
									O_OBSTACLES VARCHAR(255),
									O_OPERATING_CURRENT VARCHAR(255),
									O_PELV_SYSTEM VARCHAR(255), 
									O_PLACING_OUT_REACH VARCHAR(255),
									P_PREVENT_CONNECT_GENERATOR VARCHAR(255),
									PROTECTIVE_MEASURE VARCHAR(255),
									O_REINFORCED_INSULATION VARCHAR(255),
									O_SELV_SYSTEM VARCHAR(255),
									I_SERVICE_CABLE VARCHAR(255),
									I_SERVICE_FUSE VARCHAR(255), 
									O_SUPPLEMENTARY_BONDING VARCHAR(255),
									I_TOV_MEASURES_LV_HV VARCHAR(255),
									PERIODIC_INSPECTION_ID INTEGER,
								    CONSTRAINT PK_IPAO_INSPECTION_ID PRIMARY KEY (IPAO_INSPECTION_ID),
									CONSTRAINT FK_PERIODIC_INSPECTION_ID FOREIGN KEY (PERIODIC_INSPECTION_ID) REFERENCES PERIODIC_INSPECTION_TABLE (PERIODIC_INSPECTION_ID)ON DELETE CASCADE
                                    ); 
	
CREATE TABLE  ins_db_parent_array (DB_PARENT_ID INTEGER NOT NULL, 
                              DB_PARENT_FLAG VARCHAR(255),
							  DISTRIBUTION_BOARD VARCHAR(255),
							  DISTRIBUTION_LOCATION VARCHAR(255),
							  DISTRIBUTION_SOURCE_DETAILS VARCHAR(255), 
							  IPAO_INSPECTION_ID INTEGER, 
							  CONSTRAINT PK_DB_PARENT_ID PRIMARY KEY (DB_PARENT_ID),
							  CONSTRAINT FK_DB_PARENT_IPAO_INSPECTION_ID FOREIGN KEY (IPAO_INSPECTION_ID) REFERENCES ins_ipao_inspection_table (IPAO_INSPECTION_ID) ON DELETE CASCADE
							  ); 
									

 CREATE TABLE  ins_circuit_table (CIRCUIT_ID INTEGER NOT NULL, 
                             ADEQUACY_CONNECTIONS VARCHAR(255), 
							 ADEQUACY_PROTECT_DEVICES VARCHAR(255), 
							 ADEQUATELY_CONNECTED_ENCLOSURE VARCHAR(255), 
							 CABLE_INSTALLATION VARCHAR(255), 
							 CABLESA VARCHAR(255),
							 CABLES_CONC_DEPTH VARCHAR(255), 
							 CABLES_CONCEAL_UNDER_FLOORS VARCHAR(255), 
							 CABLES_TERMINATED VARCHAR(255), 
							 CIRCUIT_STATUS VARCHAR(255), 
							 CO_ORDINATION VARCHAR(255),
							 CONDITION_ACCESSORIES VARCHAR(255), 
							 CONDITION_CIRCUIT_ACCESSORIES VARCHAR(255), 
							 CONDUCTOR_CORRECT_TERMINATED VARCHAR(255), 
							 CONDUCTOR_VISIBLE_OUTSIDE VARCHAR(255), 
							 CONN_LIVE_CONDUCTORS VARCHAR(255), 
							 CONTAINMENT_SYSTEMS VARCHAR(255), 
							 CURRENT_CARRY_CAPACITY VARCHAR(255),
							 EXAMINATION_CABLES VARCHAR(255), 
							 EXAMINATION_INSULATION VARCHAR(255), 
							 IDENTIFICATION_CONDUCTORS VARCHAR(255), 
							 ISOLATION_AND_SWITCHING VARCHAR(255), 
							 NON_SHEATHED_CABLES VARCHAR(255), 
							 OPERATING_CURRENT_CIRCUITS VARCHAR(255), 
							 OPERATING_CURRENT_SOCKET VARCHAR(255), 
							 PERMANENTLY_CONNECTEDA VARCHAR(255), 
							 PERMANENTLY_CONNECTEDB VARCHAR(255), 
							 PERMANENTLY_CONNECTEDC VARCHAR(255), 
							 PERMANENTLY_CONNECTEDD VARCHAR(255), 
							 PERMANENTLY_CONNECTEDE VARCHAR(255), 
							 PERMANENTLY_CONNECTEDF VARCHAR(255), 
							 PERMANENTLY_CONNECTEDG VARCHAR(255), 
							 PERMANENTLY_CONNECTEDH VARCHAR(255), 
							 PERMANENTLY_CONNECTEDI VARCHAR(255), 
							 PERMANENTLY_CONNECTEDJ VARCHAR(255), 
							 PRESENCE_PROTECT_CONDUCTORS VARCHAR(255), 
							 PROVISION_FIRE_BARRIERS VARCHAR(255), 
							 SECTIONS_REGARDLESS_DEPTH VARCHAR(255), 
							 SEPARATION_BAND VARCHAR(255), 
							 SEPARATION_ELECTRICAL VARCHAR(255), 
							 SUITABILITY_CIRCUIT_ACCESSORIES VARCHAR(255), 
							 TEMPERATURE_RATING VARCHAR(255), 
							 WIRING_SYSTEMS VARCHAR(255), 
							 DB_PARENT_ID INTEGER,
							 CONSTRAINT PK_CIRCUIT_ID PRIMARY KEY (CIRCUIT_ID),
							 CONSTRAINT FK_CIRCUIT_DB_PARENT_ID FOREIGN KEY (DB_PARENT_ID) REFERENCES ins_db_parent_array (DB_PARENT_ID) ON DELETE CASCADE
							 ); 
							 
							 
 CREATE TABLE  ins_consumer_table (CONSUMER_ID INTEGER NOT NULL, 
                              ACCESS_AND_WORKING VARCHAR(255),
							  AL_SUPPLY_DISTRIBUTION VARCHAR(255),
							  AL_SUPPLY_OF_METER VARCHAR(255), 
							  AL_SUPPLY_OF_ORIGN VARCHAR(255),
							  ALL_CONDUCTOR_CON VARCHAR(255), 
							  ALL_POINTS_ISOLATION VARCHAR(255),
							  BASES_CORRECT_TYPE VARCHAR(255), 
							  CONSUMER_STATUS VARCHAR(255), 
							  DIAGRAMS_CHARTS VARCHAR(255), 
							  ELECTROMAGNETIC VARCHAR(255), 
							  ENCLOSURE_NOT_DAMAGED VARCHAR(255), 
							  INDICATION_OF_SPD VARCHAR(255), 
							  LIVE_PARTS_NOT_DAMAGE VARCHAR(255),
							  LOCATION_COUNT INTEGER,
							  MANUAL_CIRCUIT_BREAKERS VARCHAR(255), 
							  MECHANICAL_DAMAGE VARCHAR(255), 
							  NEXT_INSPECTION VARCHAR(255), 
							  NONSTANDARD_CABLE_COLOUR VARCHAR(255), 
							  OPERATION_MAIN_SWITCHES VARCHAR(255), 
							  OVER_VOLTAGE_PROTECTION VARCHAR(255), 
							  PLACING_OUT_OF_CONSUMER VARCHAR(255), 
							  PRESENCE_MAIN_SWITCHES VARCHAR(255), 
							  PRESENCE_OF_OBSTACLES VARCHAR(255), 
							  RCD_ADDITIONAL_PROTECTION VARCHAR(255),
							  RCD_FAULT_PROTECTION VARCHAR(255), 
							  RCD_QUARTERLY_TEST VARCHAR(255), 
							  SECURITY_OF_BARRIERS VARCHAR(255),
							  SECURITY_OF_FIXING VARCHAR(255), 
							  SUITABILITY_OF_ENCLOSURE VARCHAR(255), 
							  SWITCH_CAUSES_RCD VARCHAR(255), 
							  WARNING_NOTICEA VARCHAR(255), 
							  WARNING_NOTICEB VARCHAR(255), 
							  WARNING_NOTICEC VARCHAR(255), 
							  WARNING_NOTICED VARCHAR(255), 
							  WARNING_NOTICEE VARCHAR(255), 
							  DB_PARENT_ID INTEGER, 
							  CONSTRAINT PK_CONSUMER_ID PRIMARY KEY (CONSUMER_ID),
							  CONSTRAINT FK_CONSUMER_DB_PARENT_ID FOREIGN KEY (DB_PARENT_ID) REFERENCES ins_db_parent_array (DB_PARENT_ID) ON DELETE CASCADE
							  ); 
							  
 CREATE TABLE  ins_mains_first_array(MAINS_FIRST_ID INTEGER NOT NULL,
                                CIRCUIT_CONDUCTORSA VARCHAR(255),
								CIRCUIT_CONDUCTORSB VARCHAR(255),
								CIRCUIT_CONDUCTORSC VARCHAR(255),
								CIRCUIT_CONDUCTORSD VARCHAR(255), 
								CIRCUIT_CONDUCTORSE VARCHAR(255), 
								CIRCUIT_CONDUCTORSF VARCHAR(255), 
								CIRCUIT_CONDUCTORSG VARCHAR(255), 
								CIRCUIT_CONDUCTORSH VARCHAR(255), 
								CIRCUIT_CONDUCTORSI VARCHAR(255), 
								CIRCUIT_CONDUCTORSJ VARCHAR(255), 
								CIRCUIT_CONDUCTORSK VARCHAR(255), 
								CIRCUIT_EQUIPMENTA VARCHAR(255),
								CIRCUIT_EQUIPMENTB VARCHAR(255), 
								CIRCUIT_EQUIPMENTC VARCHAR(255), 
								CIRCUIT_EQUIPMENTD VARCHAR(255), 
								CIRCUIT_EQUIPMENTE VARCHAR(255),
								CIRCUIT_EQUIPMENTF VARCHAR(255),
								CIRCUIT_EQUIPMENTG VARCHAR(255),
								CIRCUIT_EQUIPMENTH VARCHAR(255), 
								CIRCUIT_EQUIPMENTI VARCHAR(255),
								CIRCUIT_EQUIPMENTJ VARCHAR(255), 
								CIRCUIT_EQUIPMENTK VARCHAR(255),
								DE_EQUIPA VARCHAR(255), 
								DE_EQUIPB VARCHAR(255), 
								DE_EQUIPC VARCHAR(255), 
								DE_EQUIPD VARCHAR(255), 
								DE_EQUIPE VARCHAR(255),
								DE_EQUIPF VARCHAR(255), 
								DE_EQUIPG VARCHAR(255), 
								DE_EQUIPH VARCHAR(255), 
								DE_EQUIPI VARCHAR(255),
								WARNING_NOTEA VARCHAR(255),
								WARNING_NOTEB VARCHAR(255), 
								WARNING_NOTEC VARCHAR(255),
								WARNING_NOTED VARCHAR(255),
								WARNING_NOTEE VARCHAR(255), 
								WARNING_NOTEF VARCHAR(255), 
								WARNING_NOTEG VARCHAR(255), 
								WARNING_NOTEH VARCHAR(255),
								WARNING_NOTEI VARCHAR(255),
								WARNING_NOTEJ VARCHAR(255),
								WARNING_NOTEK VARCHAR(255), 
								WARNING_NOTEL VARCHAR(255),
								WARNING_NOTEM VARCHAR(255), 
								IPAO_INSPECTION_ID INTEGER,
								CONSTRAINT PK_MAINS_FIRST_ID PRIMARY KEY (MAINS_FIRST_ID),
								CONSTRAINT FK_MAINSFIRST_IPAO_INSPECTION_ID FOREIGN KEY (IPAO_INSPECTION_ID) REFERENCES ins_ipao_inspection_table (IPAO_INSPECTION_ID) ON DELETE CASCADE
                                ); 
								
								
 CREATE TABLE ins_mains_second_array(MAINS_SECOND_ID INTEGER NOT NULL, 
                                 CABLES_CONTROLSA VARCHAR(255),
								 CABLES_CONTROLSB VARCHAR(255),
								 CABLES_CONTROLSC VARCHAR(255),
								 CABLES_CONTROLSD VARCHAR(255), 
								 CABLES_CONTROLSE VARCHAR(255), 
								 CABLES_CONTROLSF VARCHAR(255), 
								 CABLES_CONTROLSG VARCHAR(255), 
								 CABLES_CONTROLSH VARCHAR(255), 
								 CABLES_CONTROLSI VARCHAR(255), 
								 CABLES_CONTROLSJ VARCHAR(255), 
								 ISOLATORS_CONTROLSA VARCHAR(255),
								 ISOLATORS_CONTROLSB VARCHAR(255),
								 ISOLATORS_CONTROLSC VARCHAR(255), 
								 ISOLATORS_CONTROLSD VARCHAR(255), 
								 ISOLATORS_CONTROLSE VARCHAR(255), 
								 ISOLATORS_CONTROLSF VARCHAR(255), 
								 ISOLATORS_CONTROLSG VARCHAR(255), 
								 SWITCHING_DEVICESA VARCHAR(255), 
								 SWITCHING_DEVICESB VARCHAR(255), 
								 SWITCHING_DEVICESC VARCHAR(255), 
								 SWITCHING_DEVICESD VARCHAR(255),
								 SWITCHING_DEVICESE VARCHAR(255), 
								 SWITCHING_DEVICESF VARCHAR(255), 
								 SWITCHING_DEVICESG VARCHAR(255), 
								 SWITCHING_DEVICESH VARCHAR(255), 
								 SWITCHING_DEVICESI VARCHAR(255),
								 SWITCHING_DEVICESJ VARCHAR(255), 
								 SWITCHING_DEVICESK VARCHAR(255), 
								 SWITCHING_DEVICESL VARCHAR(255), 
								 IPAO_INSPECTION_ID INTEGER,
								 CONSTRAINT PK_MAINS_SECOND_ID PRIMARY KEY (MAINS_SECOND_ID),
								 CONSTRAINT FK_MAINSSECOND_IPAO_INSPECTION_ID FOREIGN KEY (IPAO_INSPECTION_ID) REFERENCES ins_ipao_inspection_table (IPAO_INSPECTION_ID) ON DELETE CASCADE
								 ); 
								 
								 
CREATE TABLE  ins_obs_form_array_one(OBS_ID INTEGER NOT NULL, 
                                 MAINS_OBSERVATION VARCHAR(255),
								 OBESA_FLAG VARCHAR(255),
								 IPAO_INSPECTION_ID INTEGER,
								 CONSTRAINT PK_OBS_ID PRIMARY KEY (OBS_ID),
								 CONSTRAINT FK_OBS_ONE_IPAO_INSPECTION_ID FOREIGN KEY (IPAO_INSPECTION_ID) REFERENCES ins_ipao_inspection_table (IPAO_INSPECTION_ID) ON DELETE CASCADE
								 ); 
								 
								 
CREATE TABLE ins_obs_form_array_three (OBS_ID INTEGER NOT NULL,
                                   OBSC_FLAG VARCHAR(255),
								   SUB_DISTRIBUTION_OBS VARCHAR(255), 
								   SUB_DB_PARENT_ID INTEGER, 
								   CONSTRAINT PK_OBS_ID PRIMARY KEY (OBS_ID),
								   CONSTRAINT FK_OBS_THREE_SUB_DB_PARENT_ID FOREIGN KEY (SUB_DB_PARENT_ID) REFERENCES ins_sub_db_parent (SUB_DB_PARENT_ID) ON DELETE CASCADE
								   );
								   
								   
CREATE TABLE ins_obs_form_array_two (OBS_ID INTEGER NOT NULL, 
                                DISTRIBUTION_OBSERVATION VARCHAR(255),
								OBSB_FLAG VARCHAR(255), 
								DB_PARENT_ID INTEGER, 
								CONSTRAINT PK_OBS_ID PRIMARY KEY (OBS_ID),
								CONSTRAINT FK_OBS_TWO_DB_PARENT_ID FOREIGN KEY (DB_PARENT_ID) REFERENCES ins_db_parent (DB_PARENT_ID) ON DELETE CASCADE
								); 
								
								
CREATE TABLE  ins_sub_db_parent (SUB_DB_PARENT_ID INTEGER NOT NULL, 
                            SUB_DB_FLAG VARCHAR(255), 
							SUB_DISTRIBUTION_BOARD VARCHAR(255),
							SUB_DISTRIBUTION_LOCATION VARCHAR(255), 
							SUB_DISTRIBUTION_SOURCE VARCHAR(255), 
							IPAO_INSPECTION_ID INTEGER, 
							CONSTRAINT PK_SUB_DB_PARENT_ID PRIMARY KEY (SUB_DB_PARENT_ID),
							CONSTRAINT FK_SUB_DB_IPAO_INSPECTION_ID FOREIGN KEY (IPAO_INSPECTION_ID) REFERENCES ins_ipao_inspection_table (IPAO_INSPECTION_ID) ON DELETE CASCADE
							);
							
CREATE TABLE  ins_sub_distribution_board_table (SUB_DISTRIBUTION_ID INTEGER NOT NULL, 
                                          DISTRIBUTION_EQUIPA VARCHAR(255), 
										  DISTRIBUTION_EQUIPB VARCHAR(255), 
										  DISTRIBUTION_EQUIPC VARCHAR(255),
										  DISTRIBUTION_EQUIPD VARCHAR(255),
										  DISTRIBUTION_EQUIPE VARCHAR(255),
										  DISTRIBUTION_EQUIPF VARCHAR(255), 
										  DISTRIBUTION_EQUIPG VARCHAR(255), 
										  DISTRIBUTION_EQUIPH VARCHAR(255), 
										  DISTRIBUTION_EQUIPI VARCHAR(255),
										  DISTRIBUTION_EQUIPJ VARCHAR(255),
										  SUB_DISTRIBUTIONA VARCHAR(255),
										  SUB_DISTRIBUTIONB VARCHAR(255), 
										  SUB_DISTRIBUTIONC VARCHAR(255), 
										  SUB_DISTRIBUTIOND VARCHAR(255), 
										  SUB_DISTRIBUTIONE VARCHAR(255), 
										  SUB_DISTRIBUTIONF VARCHAR(255), 
										  SUB_DISTRIBUTIONG VARCHAR(255), 
										  SUB_DISTRIBUTIONH VARCHAR(255), 
										  SUB_DISTRIBUTIONI VARCHAR(255), 
										  SUB_DISTRIBUTIONJ VARCHAR(255), 
										  SUB_DISTRIBUTIONK VARCHAR(255), 
										  WARNING_NOTICEA VARCHAR(255), 
										  WARNING_NOTICEB VARCHAR(255), 
										  WARNING_NOTICEC VARCHAR(255), 
										  WARNING_NOTICED VARCHAR(255), 
										  WARNING_NOTICEE VARCHAR(255), 
										  WARNING_NOTICEF VARCHAR(255), 
										  WARNING_NOTICEG VARCHAR(255), 
										  WARNING_NOTICEH VARCHAR(255), 
										  WARNING_NOTICEI VARCHAR(255), 
										  SUB_DB_PARENT_ID INTEGER, 
										  CONSTRAINT PK_SUB_DISTRIBUTION_ID PRIMARY KEY (SUB_DISTRIBUTION_ID),
										  CONSTRAINT FK_SUB_DB_BOARD_SUB_DB_PARENT_ID FOREIGN KEY (SUB_DB_PARENT_ID) REFERENCES ins_sub_db_parent (SUB_DB_PARENT_ID) ON DELETE CASCADE
										  ); 
										  
										  
CREATE TABLE ins_sub_distribution_one (SUB_DISTRIBUTION_ID INTEGER NOT NULL, 
                                   CIRCUIT_CONDUCTORSA VARCHAR(255),
								   CIRCUIT_CONDUCTORSB VARCHAR(255), 
								   CIRCUIT_CONDUCTORSC VARCHAR(255), 
								   CIRCUIT_CONDUCTORSD VARCHAR(255), 
								   CIRCUIT_CONDUCTORSE VARCHAR(255), 
								   CIRCUIT_CONDUCTORSF VARCHAR(255), 
								   CIRCUIT_CONDUCTORSG VARCHAR(255), 
								   CIRCUIT_CONDUCTORSH VARCHAR(255), 
								   CIRCUIT_CONDUCTORSI VARCHAR(255), 
								   CIRCUIT_CONDUCTORSJ VARCHAR(255),
								   CIRCUIT_CONDUCTORSK VARCHAR(255),
								   CIRCUIT_EQUIPMENTSA VARCHAR(255),
								   CIRCUIT_EQUIPMENTSB VARCHAR(255), 
								   CIRCUIT_EQUIPMENTSC VARCHAR(255), 
								   CIRCUIT_EQUIPMENTSD VARCHAR(255), 
								   CIRCUIT_EQUIPMENTSE VARCHAR(255), 
								   CIRCUIT_EQUIPMENTSF VARCHAR(255), 
								   CIRCUIT_EQUIPMENTSG VARCHAR(255), 
								   CIRCUIT_EQUIPMENTSH VARCHAR(255), 
								   CIRCUIT_EQUIPMENTSI VARCHAR(255), 
								   PERMANENTLY_CONNECTEDA VARCHAR(255),
								   PERMANENTLY_CONNECTEDB VARCHAR(255),
								   PERMANENTLY_CONNECTEDC VARCHAR(255),
								   PERMANENTLY_CONNECTEDD VARCHAR(255),
								   PERMANENTLY_CONNECTEDE VARCHAR(255), 
								   PERMANENTLY_CONNECTEDF VARCHAR(255), 
								   PERMANENTLY_CONNECTEDG VARCHAR(255), 
								   PERMANENTLY_CONNECTEDH VARCHAR(255), 
								   PERMANENTLY_CONNECTEDI VARCHAR(255), 
								   PERMANENTLY_CONNECTEDJ VARCHAR(255), 
								   PERMANENTLY_CONNECTEDK VARCHAR(255), 
								   PERMANENTLY_CONNECTEDL VARCHAR(255), 
								   PERMANENTLY_CONNECTEDM VARCHAR(255), 
								   PERMANENTLY_CONNECTEDN VARCHAR(255), 
								   SUB_CABLESA VARCHAR(255), 
								   SUB_CABLESB VARCHAR(255),
								   SUB_CABLESC VARCHAR(255), 
								   SUB_CABLESD VARCHAR(255),
								   SUB_CABLESE VARCHAR(255),
								   SUB_CABLESF VARCHAR(255),
								   SUB_CABLESG VARCHAR(255),
								   SUB_CABLESH VARCHAR(255),
								   SUB_CABLESI VARCHAR(255),
								   SUB_CABLESJ VARCHAR(255), 
								   SUB_DB_PARENT_ID INTEGER, 
								   CONSTRAINT PK_SUB_DISTRIBUTION_ID PRIMARY KEY (SUB_DISTRIBUTION_ID),
								   CONSTRAINT FK_SUB_DB_PARENT_SUB_DB_PARENT_ID FOREIGN KEY (SUB_DB_PARENT_ID) REFERENCES ins_sub_db_parent (SUB_DB_PARENT_ID) ON DELETE CASCADE
								   );		                    
CREATE TABLE isolation_current_table (       
            ISOLATION_CURRENT_ID INT AUTO_INCREMENT,
	    	IPAO_INSPECTION_ID INT,
	    	DISTRIBUTIONBOARD_DETAILS VARCHAR(225),
            REFERANCE VARCHAR(225),
            LOCATION VARCHAR(225),
            I_PRESENCE_DEVICES VARCHAR(20),
            I_CONDITION_DEVICES VARCHAR(20),
            I_LOCATION_DEVICES VARCHAR(20),
            I_CAPABLE_SECURED VARCHAR(20),
            I_OPERATION_VERIFY VARCHAR(20),
            I_INSTALL_CIRCUIT VARCHAR(20),
            I_WARNING_LABEL VARCHAR(20),
            SW_PRESENCE_DEVICES VARCHAR(20),
            SW_CONDITION_DEVICES VARCHAR(20),
            SW_ACCEPTABLE_LOCATION VARCHAR(20),
            SW_CAPABLE_OFF_POSITION VARCHAR(20),
            SW_CORRECT_OPERATION VARCHAR(20),
            SW_CIRCUIT VARCHAR(20),
            SW_WARNING_LABEL VARCHAR(20),
            EM_SWIT_PRESENCE_DEVICES VARCHAR(20),
            EM_SWIT_CONDITION_DEVICES VARCHAR(20),
            EM_SWIT_LOCATION_DEVICES VARCHAR(20),
            EM_SWIT_OPERATION_VERIFY VARCHAR(20),
            EM_SWIT_INSTALL_CIRCUIT VARCHAR(20),
            FU_SWIT_PRESENCE_DEVICES VARCHAR(20),
            FU_SWIT_LOCATION_DEVICES VARCHAR(20),
            FU_SWIT_OPERATION_VERIFY VARCHAR(20),
            C_SUITABILITY_EQUIPMENT VARCHAR(20),
            C_ENCLOSURE_NOT_DAMAGED VARCHAR(20),
            C_SUITABILITY_ENVIRONMENT VARCHAR(20),
            C_SECURITY_FIXING VARCHAR(20),
            C_CABLE_ENTRY_HOLES VARCHAR(20),
            C_PROVISION_VOLTAGE VARCHAR(20),
            C_PROVISION_OVERLOAD VARCHAR(20),
            C_CORRECT_TYPE_LAMPS VARCHAR(20),
            C_INSULA_DISPLACEMENT_BOX VARCHAR(20),
            C_OVERHEAT_SURROUNDING VARCHAR(20),
            C_OVERHEAT_CONDUCTORS VARCHAR(20),
            ISOLATION_STATUS VARCHAR(20),
			CONSTRAINT PK_ISOLATION_CURRENT_ID PRIMARY KEY(ISOLATION_CURRENT_ID),
			CONSTRAINT FK_ISOLATION_IPAO_INSPECTION_ID  FOREIGN KEY (IPAO_INSPECTION_ID) REFERENCES IPAO_INSPECTION_TABLE(IPAO_INSPECTION_ID) ON DELETE CASCADE

);

CREATE TABLE periodic_comments_table(

		   COMMENTS_ID INT AUTO_INCREMENT,
		   PERIODIC_INSPECTION_ID INT,
		   VIEWER_USERNAME VARCHAR(225),
		   INSPECTOR_USERNAME VARCHAR(225),
		   VIEWER_EMAIL VARCHAR(225),
		   INSPECTOR_EMAIL VARCHAR(225),
		   SITE_NAME VARCHAR(225),
		   VIEWER_COMMENT VARCHAR(500),
		   VIEWER_UPDATEDATE VARCHAR(225),
		   INSPECTOR_COMMENT VARCHAR(500),
           INSPECTOR_UPDATEDATE VARCHAR(225),		
           COMMENT_APPROVE_OR_REJECT VARCHAR(225),
           VIEWER_FLAG VARCHAR(225),
           INSPECTOR_FLAG VARCHAR(225),
           NO_OF_COMMENT INT,
		   CONSTRAINT PK_COMMENTS_ID PRIMARY KEY(COMMENTS_ID),
           CONSTRAINT FK_COMMENTS_PERIODIC_INSPECTION_ID  FOREIGN KEY (PERIODIC_INSPECTION_ID) REFERENCES PERIODIC_INSPECTION_TABLE(PERIODIC_INSPECTION_ID) ON DELETE CASCADE

);

CREATE TABLE inspection_outer_observation_table(

		   INSPECTION_OUTER_OBSERVATION_ID INT AUTO_INCREMENT,
		   IPAO_INSPECTION_ID INT,
		   OBSERVATION_COMPONENT_DETAILS VARCHAR(225),
		   OBSERVATION_DESCRIPTION VARCHAR(500),
		   INSPECTION_OUTER_OBSERVATION_STATUS VARCHAR(225),
		   CONSTRAINT PK_INSPECTION_OUTER_OBSERVATION_ID PRIMARY KEY(INSPECTION_OUTER_OBSERVATION_ID),
		   CONSTRAINT FK_OUTER_IPAO_INSPECTION_ID  FOREIGN KEY (IPAO_INSPECTION_ID) REFERENCES IPAO_INSPECTION_TABLE(IPAO_INSPECTION_ID) ON DELETE CASCADE

);

CREATE TABLE inspection_inner_observation_table(

		   INSPECTION_INNER_OBSERVATIONS_ID INT AUTO_INCREMENT,
		   INSPECTION_OUTER_OBSERVATION_ID INT,
		   OBSERVATION_COMPONENT_DETAILS VARCHAR(225),
		   OBSERVATION_DESCRIPTION VARCHAR(500),
		   INSPECTION_INNER_OBSERVATION_STATUS VARCHAR(225),
		   CONSTRAINT PK_INSPECTION_OBSERVATIONS_ID PRIMARY KEY(INSPECTION_OBSERVATIONS_ID),
           CONSTRAINT FK_INSPECTION_OUTER_OBSERVATION_ID  FOREIGN KEY (INSPECTION_OUTER_OBSERVATION_ID) REFERENCES INSPECTION_OUTER_OBSERVATION_TABLE(INSPECTION_OUTER_OBSERVATION_ID) ON DELETE CASCADE

);

--------> Part_4 TestingAPI

CREATE TABLE testing_reports_table (
				TESTING_REPORT_ID INT AUTO_INCREMENT,
				SITE_ID INT,
				USER_NAME VARCHAR(225),       
				CREATED_BY VARCHAR(255),
			    CREATED_DATE datetime,
			    UPDATED_BY VARCHAR(255),
	            UPDATED_DATE datetime,
				CONSTRAINT PK_TESTING_REPORT_ID PRIMARY KEY(TESTING_REPORT_ID)
              
);


CREATE TABLE testing_table (

				TESTING_ID INT AUTO_INCREMENT,
				TESTING_REPORT_ID INT,
				LOCATION_NUMBER INT,
                LOCATION_NAME VARCHAR(225),
 				TEST_ENGINEER_NAME VARCHAR(225),
 				TESTING_STATUS VARCHAR(225),
 				LOCATION_COUNT INT NOT NULL,
 				DESIGNATION VARCHAR(225),
                COMPANY_NAME VARCHAR(225),
				DATE VARCHAR(225),
 				CONSTRAINT PK_TESTING_ID PRIMARY KEY(TESTING_ID),
				CONSTRAINT FK_DISTRIBUTION_TESTING_REPORT_ID FOREIGN KEY (TESTING_REPORT_ID) REFERENCES TESTING_REPORTS_TABLE(TESTING_REPORT_ID) ON DELETE CASCADE 
               
);

CREATE TABLE test_dist_records_table (
				TEST_DIST_RECORD_ID INT AUTO_INCREMENT,
				TESTING_ID INT,
				TEST_DIST_RECORDS_STATUS VARCHAR(20),
				LOCATION_COUNT INT NOT NULL,
				CONSTRAINT PK_TEST_DIST_RECORD_ID PRIMARY KEY(TEST_DIST_RECORD_ID),
				CONSTRAINT FK_TEST_DIST_RECORD_TESTING_ID FOREIGN KEY (TESTING_ID) REFERENCES TESTING_TABLE(TESTING_ID) ON DELETE CASCADE     

)

CREATE TABLE testing_distribution_table (

                DISTRIBUTION_ID INT AUTO_INCREMENT,
				TEST_DIST_RECORD_ID INT,
                DISTRIBUTION_BOARD_DETAILS VARCHAR(225),
				REFERANCE VARCHAR(225),
				LOCATION VARCHAR(225),
				CORRECT_SUPPLY_POLARITY VARCHAR(225),
				NUM_OUTPUT_CIRCUITS_USE VARCHAR(225),
				RATINGS_AMPS VARCHAR(225),
				NUM_OUTPUT_CIRCUITS_SPARE VARCHAR(225),
				INSTALLED_EQUIPMENT_VULNARABLE  VARCHAR(225),
				SOURCE_FROM_SUPPLY VARCHAR(225),
				INCOMING_FAULTCURRENT VARCHAR(225),
				INCOMING_VOLTAGE VARCHAR(225),
				INCOMING_LOOPIMPEDANCE VARCHAR(225),
                REASON_FOR_VULNARABLE VARCHAR(255),
				CONSTRAINT PK_TESTING_DISTRIBUTION_ID PRIMARY KEY(DISTRIBUTION_ID),
				CONSTRAINT FK_DISTRIBUTION_TEST_DIST_RECORD_ID FOREIGN KEY (TEST_DIST_RECORD_ID) REFERENCES TEST_DIST_RECORDS_TABLE(TEST_DIST_RECORD_ID) ON DELETE CASCADE     

				
	);
	
CREATE TABLE TESTING_INCOMING_DISTRIBUTION_TABLE (

                INCOMING_DISTRIBUTION_ID INT AUTO_INCREMENT,
				TESTING_RECORD_ID INT,
				INCOMING_VOLTAGE VARCHAR(225),
				INCOMING_LOOP_IMPEDANCE VARCHAR(225),
				INCOMING_FAULTCURRENT VARCHAR(225),
				SOURCE_FROM_SUPPLY VARCHAR(225),
				INCOMING_ACTUALLOAD VARCHAR(225),
				CONSTRAINT PK_INCOMING_ID PRIMARY KEY(INCOMING_DISTRIBUTION_ID),
				CONSTRAINT FK_TESTING_REPORT_ID FOREIGN KEY (TESTING_REPORT_ID) REFERENCES TESTING_REPORTS_TABLE(TESTING_REPORT_ID) ON DELETE CASCADE     

				
	);

CREATE TABLE testing_records_table ( 
                TESTING_RECORD_ID INT AUTO_INCREMENT,
				TEST_DIST_RECORD_ID INT,
 				CIRCUIT_NO VARCHAR(225),
				CIRCUIT_DESC  VARCHAR(225),
				CIRCUIT_STANDARD_NO  VARCHAR(225),
				CIRCUIT_MAKE VARCHAR(225),
				CIRCUIT_TYPE  VARCHAR(225), 
				CIRCUIT_CURRENT_CURVE VARCHAR(225), 
				CIRCUIT_NUMBER_OF_POLES  VARCHAR(225),
				CIRCUIT_RATING VARCHAR(225), 
				CIRCUIT_BREAKING_CAPACITY VARCHAR(225),
                INSULATION_RESISTANCE VARCHAR(225),
				SHORT_CIRCUIT_SETTING VARCHAR(225),
				E_F_SETTING VARCHAR(225),
				CONDUCTOR_INSTALLATION VARCHAR(225),
				CONDUCTOR_PHASE VARCHAR(225),
				CONDUCTOR_NEUTRAL VARCHAR(225),
				CONDUCTOR_PECPC VARCHAR(225),
				CONTINUTIY_APPROXIMATELENGTH VARCHAR(225),
				CONTINUTIY_R1_R2 VARCHAR(225),
				CONTINUTIY_R2 VARCHAR(225),
				MAX_ALLOWED_VALUE VARCHAR(225),
				CONTINUITY_REMARKS VARCHAR(225),
				CONTINUTIY_POLARITY VARCHAR(225),
				TEST_VOLTAGE VARCHAR(225),
				TEST_LOOPIMPEDANCE VARCHAR(225),
				TEST_FAULTCURRENT VARCHAR(225),
				DISCONNECTION_TIME VARCHAR(225),
				 
				RCD_CURRENT VARCHAR(225),
				RCD_OPERATINGCURRENT VARCHAR(225),
				RCD_OPERATINGFIVECURRENT VARCHAR(225),
				RCD_TESTBUTTONOPERATION VARCHAR(225),
				RCD_REMARKS VARCHAR(225),

				TESTING_RECORD_STATUS VARCHAR(225),
				RCD_TYPE VARCHAR(225),
                 CIRCUIT_DROP VARCHAR(255),
                 CONDUCTOR_DROP VARCHAR(255),
                 CONDUCTOR_RESISTANCE_DROP VARCHAR(255),
                 VOLTAGE_DROP VARCHAR(255),
                 INSULATION_DROP VARCHAR(255),
					
				CONSTRAINT PK_TESTING_RECORD_ID PRIMARY KEY(TESTING_RECORD_ID),
				CONSTRAINT FK_TESTING_RECORD_TEST_DIST_RECORD_ID FOREIGN KEY (TEST_DIST_RECORD_ID) REFERENCES TEST_DIST_RECORDS_TABLE(TEST_DIST_RECORD_ID) ON DELETE CASCADE     

 );
 
CREATE TABLE testing_records_sourcesupply (

                SOURCESUPPLY_ID INT AUTO_INCREMENT,
				TESTING_RECORD_ID INT,
				TEST_VOLTAGE VARCHAR(225),
				TEST_LOOPIMPEDANCE VARCHAR(225),
				TEST_FAULTCURRENT VARCHAR(225),
				DISCONNECTION_TIME VARCHAR(225),
				CONSTRAINT PK_SOURCESUPPLY_ID PRIMARY KEY(SOURCESUPPLY_ID),
				CONSTRAINT FK_SOURCESUPPLY_TESTING_RECORD_ID FOREIGN KEY (TESTING_RECORD_ID) REFERENCES TESTING_RECORDS_TABLE(TESTING_RECORD_ID) ON DELETE CASCADE     
				
	);
 
 CREATE TABLE testing_comments_table(

		   COMMENTS_ID INT AUTO_INCREMENT,
		   TESTING_REPORT_ID INT,
		   VIEWER_USERNAME VARCHAR(225),
		   INSPECTOR_USERNAME VARCHAR(225),
		   VIEWER_EMAIL VARCHAR(225),
		   INSPECTOR_EMAIL VARCHAR(225),
		   SITE_NAME VARCHAR(225),
		   VIEWER_COMMENT VARCHAR(500),
		   VIEWER_UPDATEDATE VARCHAR(225),
		   INSPECTOR_COMMENT VARCHAR(500),
           INSPECTOR_UPDATEDATE VARCHAR(225),		
           COMMENT_APPROVE_OR_REJECT VARCHAR(225),
           VIEWER_FLAG VARCHAR(225),
           INSPECTOR_FLAG VARCHAR(225),
           NO_OF_COMMENT INT,
		   CONSTRAINT PK_COMMENTS_ID PRIMARY KEY(COMMENTS_ID),
		   CONSTRAINT FK_COMMENTS_TESTING_REPORT_ID FOREIGN KEY (TESTING_REPORT_ID) REFERENCES TESTING_REPORTS_TABLE(TESTING_REPORT_ID) ON DELETE CASCADE 

);


CREATE TABLE TESTING_EQUIPMENT_TABLE(
		   
		   EQUIPMENT_ID INT AUTO_INCREMENT,
		   TESTING_ID INT,
		   EQUIPMENT_NAME VARCHAR(255),
		   EQUIPMENT_MAKE VARCHAR(255),
		   EQUIPMENT_MODEL VARCHAR(255),
		   EQUIPMENT_SERIAL_NO VARCHAR(255),
		   EQUIPMENT_CALIBRATION_DUE_DATE DATETIME,
		   TESTING_EQUIPMENT_STATUS VARCHAR(255),
		   CONSTRAINT PK_EQUIPMENT_ID PRIMARY KEY(EQUIPMENT_ID),
		   CONSTRAINT FK_EQUIPMENT_TESTING_ID FOREIGN KEY (TESTING_ID) REFERENCES TESTING_TABLE(TESTING_ID) ON DELETE CASCADE
);

CREATE TABLE testing_inner_observations_table(

		   TESTING_INNER_OBSERVATIONS_ID INT AUTO_INCREMENT,
		   TEST_DIST_RECORD_ID INT,
		   OBSERVATION_COMPONENT_DETAILS VARCHAR(225),
		   OBSERVATION_DESCRIPTION VARCHAR(500),
		   TESTING_INNER_OBSERVATION_STATUS VARCHAR(225),
		   CONSTRAINT PK_TESTING_INNER_OBSERVATIONS_ID PRIMARY KEY(TESTING_INNER_OBSERVATIONS_ID),
           CONSTRAINT FK_INNER_TEST_DIST_RECORD_ID FOREIGN KEY (TEST_DIST_RECORD_ID) REFERENCES TEST_DIST_RECORDS_TABLE(TEST_DIST_RECORD_ID) ON DELETE CASCADE

);

--------> Part_5 Summary_Section

 CREATE TABLE summary_table (
            SUMMARY_ID INT AUTO_INCREMENT,
			SITE_ID INT,
			USER_NAME VARCHAR(255),
            LIMITATIONS_INSPECTION  VARCHAR(255),
            EXTENT_INSTALLATION VARCHAR(255),
            AGREED_LIMITATIONS  VARCHAR(255),
            AGREED_WITH VARCHAR(255),
            OPERATIONAL_LIMITATIONS VARCHAR(255),
            INSPECTION_TESTING_DETAILED VARCHAR(255),
            INSPECTION_REPORT_TESTRESULT VARCHAR(255),
            RECOMMENDATIONS_DATE VARCHAR(255),
            GENERAL_CONDITION_INSTALLATION VARCHAR(500),
            OVERALL_ASSESSMENT_INSTALLATION VARCHAR(255),
            CREATED_BY VARCHAR(255),
		    CREATED_DATE datetime,
		    UPDATED_BY VARCHAR(255),
            UPDATED_DATE datetime,
            CONSTRAINT PK_SUMMARY_ID PRIMARY KEY(SUMMARY_ID)
              
);

CREATE TABLE declaration_table (
            DECLARATION_ID INT AUTO_INCREMENT,
			SUMMARY_ID INT,
            DECLARATION_ROLE  VARCHAR(255),
            NAME VARCHAR(255),
            SIGNATURE  LONGTEXT,
            COMPANY VARCHAR(255),
            POSITION VARCHAR(255),
            ADDRESS VARCHAR(500),
            DATE VARCHAR(255),			
            CONSTRAINT PK_DECLARATION_ID PRIMARY KEY(DECLARATION_ID),
			CONSTRAINT FK_DECLARATION_SUMMARY_ID FOREIGN KEY (SUMMARY_ID) REFERENCES SUMMARY_TABLE(SUMMARY_ID) ON DELETE CASCADE              
);


 CREATE TABLE summary_comments_table(

		   COMMENTS_ID INT AUTO_INCREMENT,
		   SUMMARY_ID INT,
		   VIEWER_USERNAME VARCHAR(225),
		   INSPECTOR_USERNAME VARCHAR(225),
		   VIEWER_EMAIL VARCHAR(225),
		   INSPECTOR_EMAIL VARCHAR(225),
		   SITE_NAME VARCHAR(225),
		   VIEWER_COMMENT VARCHAR(500),
		   VIEWER_UPDATEDATE VARCHAR(225),
		   INSPECTOR_COMMENT VARCHAR(500),
           INSPECTOR_UPDATEDATE VARCHAR(225),		
           COMMENT_APPROVE_OR_REJECT VARCHAR(225),
           VIEWER_FLAG VARCHAR(225),
           INSPECTOR_FLAG VARCHAR(225),
           NO_OF_COMMENT INT,
		   CONSTRAINT PK_COMMENTS_ID PRIMARY KEY(COMMENTS_ID),
		   CONSTRAINT FK_COMMENTS_SUMMARY_ID FOREIGN KEY (SUMMARY_ID) REFERENCES SUMMARY_TABLE(SUMMARY_ID) ON DELETE CASCADE              

);

CREATE TABLE summary_observations_table (
            OBSERVATIONS_ID INT AUTO_INCREMENT,
			SUMMARY_ID INT,
			REFERENCE_ID INT,
            FURTHER_ACTIONS  VARCHAR(255),
            COMMENT VARCHAR(255),
            OBSERVATIONS VARCHAR(500),
            OBERVATION_STATUS VARCHAR(20),
            OBSERVATION_COMPONENT_DETAILS VARCHAR(225),
            CONSTRAINT PK_OBSERVATIONS_ID PRIMARY KEY(OBSERVATIONS_ID),
			CONSTRAINT FK_SUMMARY_OBSERVATIONS_ID FOREIGN KEY (SUMMARY_ID) REFERENCES summary_table(SUMMARY_ID) ON DELETE CASCADE              
);

CREATE TABLE summary_inner_observations_table (
            INNER_OBSERVATIONS_ID INT AUTO_INCREMENT,
			OBSERVATIONS_ID INT,
			REFERENCE_ID INT,
            FURTHER_ACTIONS  VARCHAR(255),
            COMMENT VARCHAR(255),
            OBSERVATIONS VARCHAR(500),
            OBERVATION_STATUS VARCHAR(20),
            OBSERVATION_COMPONENT_DETAILS VARCHAR(225),
            CONSTRAINT PK_INNER_OBSERVATIONS_ID PRIMARY KEY(INNER_OBSERVATIONS_ID),
			CONSTRAINT FK_INNER_OBSERVATIONS_ID FOREIGN KEY (OBSERVATIONS_ID) REFERENCES summary_observations_table(OBSERVATIONS_ID) ON DELETE CASCADE              
);

CREATE TABLE db_child_observation (DB_CHILD_OBSERVATION_ID INTEGER NOT NULL, 
                                   COMMENT VARCHAR(255), 
								   FURTHER_ACTIONS VARCHAR(255),
								   OBERVATION_STATUS VARCHAR(255),
								   OBSERVATIONS VARCHAR(255), 
								   DB_PARENT_OBSERVATION_ID INTEGER,
								   CONSTRAINT PK_DB_CHILD_OBSERVATION_ID PRIMARY KEY (DB_CHILD_OBSERVATION_ID),
								   CONSTRAINT FK_DB_CHILD_OBS_DB_PARENT_OBSERVATION_ID FOREIGN KEY (DB_PARENT_OBSERVATION_ID) REFERENCES ins_db_parent_observation (DB_PARENT_OBSERVATION_ID)ON DELETE CASCADE);

 CREATE TABLE ins_db_parent_observation (DB_PARENT_OBSERVATION_ID INTEGER NOT NULL, 
                                    DB_PARENT_STATUS VARCHAR(255),
									OBSERVATIONS_ID INTEGER, 
									CONSTRAINT PK_DB_PARENT_OBSERVATION_ID PRIMARY KEY (DB_PARENT_OBSERVATION_ID),
									CONSTRAINT FK_DB_PARENT_OBS_OBSERVATIONS_ID FOREIGN KEY (OBSERVATIONS_ID) REFERENCES summary_observations_table (OBSERVATIONS_ID)ON DELETE CASCADE); 

CREATE TABLE ins_mains_observation (MAINS_OBSERVATION_ID INTEGER NOT NULL, 
                                COMMENT VARCHAR(255), 
                                FURTHER_ACTIONS VARCHAR(255), 
                                OBERVATION_STATUS VARCHAR(255),
                                OBSERVATIONS VARCHAR(255), 
                                OBSERVATIONS_ID INTEGER,
                                CONSTRAINT PK_MAINS_OBSERVATION_ID PRIMARY KEY (MAINS_OBSERVATION_ID),
								CONSTRAINT FK_MAINS_OBS_OBSERVATIONS_ID FOREIGN KEY (OBSERVATIONS_ID) REFERENCES summary_observations_table (OBSERVATIONS_ID)ON DELETE CASCADE);

CREATE TABLE ins_subdb_child_observation (SUBDB_CHILD_OBSERVATION_ID INTEGER NOT NULL,
                                     COMMENT VARCHAR(255), 
									 FURTHER_ACTIONS VARCHAR(255),
									 OBERVATION_STATUS VARCHAR(255), 
									 OBSERVATIONS VARCHAR(255), 
									 SUBDB_OBSERVATION_ID INTEGER, 
									 CONSTRAINT PK_SUBDB_CHILD_OBSERVATION_ID PRIMARY KEY (SUBDB_CHILD_OBSERVATION_ID),
									 CONSTRAINT FK_SUB_DB_CHILD_OBS_SUBDB_OBSERVATION_ID FOREIGN KEY (SUBDB_OBSERVATION_ID) REFERENCES ins_subdb_observation (SUBDB_OBSERVATION_ID)ON DELETE CASCADE); 

 CREATE TABLE ins_subdb_observation (SUBDB_OBSERVATION_ID INTEGER NOT NULL,
                                 SUBDB_OBSERVATION_STATUS VARCHAR(255), 
								 OBSERVATIONS_ID INTEGER, 
								 CONSTRAINT PK_SUBDB_OBSERVATION_ID PRIMARY KEY (SUBDB_OBSERVATION_ID),
								 CONSTRAINT FK_SUB_DB_OBS_OBSERVATIONS_ID FOREIGN KEY (OBSERVATIONS_ID) REFERENCES summary_observations_table (OBSERVATIONS_ID)ON DELETE CASCADE
                                 ); 
-----------> Registration <----------

CREATE TABLE register_table (

				REGISTER_ID INT AUTO_INCREMENT,
				
				NAME VARCHAR(225),
 				COMPANY_NAME VARCHAR(225),
				USER_NAME VARCHAR(225),
				PASSWORD VARCHAR(225),
				ROLE VARCHAR(225),
				CONTACT_NUMBER VARCHAR(225),
				APPLICATION_TYPE VARCHAR(225),
				DEPARTMENT VARCHAR(225),
				DESIGNATION VARCHAR(225),
				ADDRESS VARCHAR(500),
				DISTRICT VARCHAR(225),
				COUNTRY VARCHAR(225),
				PINCODE  VARCHAR(225),
				STATE  VARCHAR(225),
				PERMISSION  VARCHAR(225),
				PERMISSION_BY  VARCHAR(225),
				COMMENT  VARCHAR(500),
				OTP_SESSION_KEY VARCHAR(255),
				ASSIGNED_BY VARCHAR(255),
				NO_OF_LICENCE VARCHAR(255),
				SITE_NAME VARCHAR(255) NULL,
                MOB_NUM_UPDATE datetime, 
				CREATED_BY VARCHAR(255) NOT NULL,
				UPDATED_BY VARCHAR(255) NOT NULL,
				CREATED_DATE datetime NOT NULL,    
				UPDATED_DATE datetime NOT NULL,			

 				CONSTRAINT PK_REGISTER_ID PRIMARY KEY(REGISTER_ID)
                
);

-----------> Observation_Table <----------

    CREATE TABLE observation_component_table(    
				OBSERVATION_ID INT AUTO_INCREMENT , 
				USER_NAME VARCHAR(225),
	            SITE_ID  INT,
	            OBSERVATION_COMPONENT  VARCHAR(225),
	            OBSERVATION_COMPONENT_DETAILS VARCHAR(225),
	            OBSERVATIONS VARCHAR(2000),
	            FURTHER_ACTIONS  VARCHAR(255),
            	COMMENT VARCHAR(255),
	            CREATED_BY VARCHAR(255),
				CREATED_DATE datetime,
			    UPDATED_BY VARCHAR(255),
				UPDATED_DATE datetime,
				CONSTRAINT PK_OBSERVATION_ID PRIMARY KEY(OBSERVATION_ID)
				
	);

	CREATE TABLE licence_table(
					LICENCE_ID INT;
					LV_NO_OF_LICENCE VARCHAR(225);
					LPS_NO_OF_LICENCE VARCHAR(225);
					RISK_NO_OF_LICENCE VARCHAR(225);
					EMC_NO_OF_LICENCE VARCHAR(225);
					USERNAME VARCHAR(225);
	
);

	
	CREATE TABLE refresh_token(
					ID BIGINT AUTO_INCREMENT,
					TOKEN VARCHAR(255) NOT NULL,
					CREATED_DATE datetime NOT NULL
			);

CREATE TABLE application_license(
					APPLICATION_LICENSEID  INT AUTO_INCREMENT,
					NO_OF_LICENSE INT,
					INSPECTOR_NAME VARCHAR(255),
					INSPECTOR_EMAIL VARCHAR(255),
					PHONE_NUM VARCHAR(255),
					STATUS VARCHAR(255),
					APPLICATION_NAME VARCHAR(255),
 					LICENSE_AMOUNT VARCHAR(255),
					ORDERID VARCHAR(255),
					CREATED_DATE datetime,
					UPDATED_DATE datetime,
					CREATED_BY VARCHAR(255),
					UPDATED_BY VARCHAR(255),
				 
					CONSTRAINT PK_APPLICATION_LICENSEID PRIMARY KEY(APPLICATION_LICENSEID)
	);

	
	-------->	SLD Diagram  <----------


			CREATE TABLE diagram_component(
			DIAGRAM_ID INT AUTO_INCREMENT,
			USER_NAME VARCHAR(255),
			FILE_NAME VARCHAR(255),
			FILE longtext,
			CREATED_BY VARCHAR(255),
			CREATED_DATE DATETIME,
			UPDATED_BY VARCHAR(255),
			UPDATED_DATE DATETIME,
			CONSTRAINT PK_DIAGRAM_ID PRIMARY KEY(DIAGRAM_ID)
			)
			
-----------> Diagram Symbols <----------
			
            
            CREATE TABLE diagram_symbol(
			ID INT AUTO_INCREMENT,
			IMAGE_SOURCE VARCHAR(200),
			IMAGE_NAME VARCHAR(200),
			CONSTRAINT PK_ID PRIMARY KEY(ID)	
			)
			
			INSERT INTO DIAGRAM_SYMBOL VALUES (1, '../../assets/img/Generator.png', 'Generator');
			INSERT INTO DIAGRAM_SYMBOL VALUES (2, '../../assets/img/ACB.png', 'ACB');
			INSERT INTO DIAGRAM_SYMBOL VALUES (3, '../../assets/img/Breaker1.png', 'Breaker1');
			INSERT INTO DIAGRAM_SYMBOL VALUES (4, '../../assets/img/Distribution board.png', 'Distribution board');
			INSERT INTO DIAGRAM_SYMBOL VALUES (5, '../../assets/img/Generator.png', 'Generator');
			INSERT INTO DIAGRAM_SYMBOL VALUES (6, '../../assets/img/Light.png', 'Light');
			INSERT INTO DIAGRAM_SYMBOL VALUES (7, '../../assets/img/MCB.png', 'MCB');
			INSERT INTO DIAGRAM_SYMBOL VALUES (8, '../../assets/img/MCB_with_RCD.png', 'MCB_with_RCD');
			INSERT INTO DIAGRAM_SYMBOL VALUES (9, '../../assets/img/MCCB.png', 'MCCB');
			INSERT INTO DIAGRAM_SYMBOL VALUES (10, '../../assets/img/motor.png', 'Motor');
			INSERT INTO DIAGRAM_SYMBOL VALUES (11, '../../assets/img/Transformer_delta_delta.png', 'Transformer_delta_delta');
			INSERT INTO DIAGRAM_SYMBOL VALUES (12, '../../assets/img/Transformer_delta_star.png', 'Transformer_delta_star');
			INSERT INTO DIAGRAM_SYMBOL VALUES (13, '../../assets/img/Transformer_star_delta.png', 'Transformer_star_delta');
			INSERT INTO DIAGRAM_SYMBOL VALUES (14, '../../assets/img/Transformer_star_star.png', 'Transformer_star_star');
			INSERT INTO DIAGRAM_SYMBOL VALUES (15, '../../assets/img/Wire.png', 'Wire');
			INSERT INTO DIAGRAM_SYMBOL VALUES (16, '../../assets/img/Capacitor.png', 'Capacitor');
			INSERT INTO DIAGRAM_SYMBOL VALUES (17, '../../assets/img/Inductor.png', 'Inductor');
			INSERT INTO DIAGRAM_SYMBOL VALUES (18, '../../assets/img/Diode.png', 'Diode');
			INSERT INTO DIAGRAM_SYMBOL VALUES (19, '../../assets/img/Resistor.png', 'Resistor');
			INSERT INTO DIAGRAM_SYMBOL VALUES (20, '../../assets/img/Ground1.png', 'Ground1');
			INSERT INTO DIAGRAM_SYMBOL VALUES (21, '../../assets/img/PortableAppliance.png', 'PortableAppliance');
			INSERT INTO DIAGRAM_SYMBOL VALUES (22, '../../assets/img/Fan.png', 'Fan');
			INSERT INTO DIAGRAM_SYMBOL VALUES (23, '../../assets/img/DieselGenerator.png', 'DieselGenerator');
			INSERT INTO DIAGRAM_SYMBOL VALUES (24, '../../assets/img/EquipBond.png', 'EquipBond');

			
			
-----------> MCB <----------

			CREATE TABLE mcb(
						MCB_ID INT AUTO_INCREMENT,
						NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						REFERENCE_NAME VARCHAR(200),
						MANUFACTURER_NAME VARCHAR(200),
						RATING VARCHAR(200),
						VOLTAGE VARCHAR(200),
						NO_OF_POLES VARCHAR(200),
						CURRENT_CURVE VARCHAR(200),
						OUTGOING_SIZE_PHASE INTEGER,
						OUTGOING_SIZE_NEUTRAL INTEGER,
						OUTGOING_SIZE_PROTECTIVE INTEGER,
						CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,		
						CONSTRAINT PK_MCB_ID PRIMARY KEY(MCB_ID)	
						);
			
			
			CREATE TABLE general_testing_mcb(
						GENERAL_TESTING_MCB_ID INT AUTO_INCREMENT,
						MCB_ID INTEGER,
						RN VARCHAR(200),
						YN VARCHAR(200),
						BN VARCHAR(200),
						RE VARCHAR(200),
						YE VARCHAR(200),
						BE VARCHAR(200),
						RY VARCHAR(200),
						YB VARCHAR(200),
						BR VARCHAR(200),
						NE VARCHAR(200),
						IR_CURRENT VARCHAR(200),
						IY_CURRENT VARCHAR(200),
						IB_CURRENT VARCHAR(200),
						IN_CURRENT VARCHAR(200),
						IPE_CURRENT VARCHAR(200),
						POWER_FACTOR VARCHAR(200),
						FREQUENCY VARCHAR(200),
						CONSTRAINT PK_GENERAL_TESTING_MCB_ID PRIMARY KEY(GENERAL_TESTING_MCB_ID),
						CONSTRAINT FK_GENERAL_TESTING_MCB_ID FOREIGN KEY(MCB_ID) REFERENCES mcb(MCB_ID) ON DELETE CASCADE
						);
			
			CREATE TABLE safety_testing_mcb(
						SAFETY_TESTING_MCB_ID INT AUTO_INCREMENT,
						MCB_ID INTEGER,
						RN VARCHAR(200),
						YN VARCHAR(200),
						BN VARCHAR(200),
						RE VARCHAR(200),
						YE VARCHAR(200),
						BE VARCHAR(200),
						RY VARCHAR(200),
						YB VARCHAR(200),
						BR VARCHAR(200),
						SHOCK_VOLTAGE VARCHAR(200),
						FLOOR_RESISTANCE VARCHAR(200),
						WALL_RESISTANCE VARCHAR(200),
						CONSTRAINT PK_SAFETY_TESTING_MCB_ID PRIMARY KEY(SAFETY_TESTING_MCB_ID),
						CONSTRAINT FK_SAFETY_TESTING_MCB_ID FOREIGN KEY(MCB_ID) REFERENCES mcb(MCB_ID) ON DELETE CASCADE
						);
						
			
			-----------> MCCB <----------
			
			CREATE TABLE mccb(
						MCCB_ID INT AUTO_INCREMENT,
						NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						REFERENCE_NAME VARCHAR(200),
						MANUFACTURER_NAME VARCHAR(200),
						RATING VARCHAR(200),
						VOLTAGE VARCHAR(200),
						NO_OF_POLES VARCHAR(200),
						RELAY_MANUFACTURERS VARCHAR(200),
			            MODEL VARCHAR(200),
			            CURRENT_SETTING INTEGER,
			            OVERCURRENT VARCHAR(200),
			            SET_TIMES VARCHAR(200),
			            EARTH_FAULT VARCHAR(200),
			            SET_TIME VARCHAR(200),
			            OUTGOING_SIZE_PHASE INTEGER,
						OUTGOING_SIZE_NEUTRAL INTEGER,
						OUTGOING_SIZE_PROTECTIVE INTEGER,
						OUTGOING_CABLE INTEGER,
						CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,		
						CONSTRAINT PK_MCCB_ID PRIMARY KEY(MCCB_ID)	
						);
						

			CREATE TABLE general_testing_mccb(
						GENERAL_TESTING_MCCB_ID INT AUTO_INCREMENT,
						MCCB_ID INTEGER,
						RN VARCHAR(200),
						YN VARCHAR(200),
						BN VARCHAR(200),
						RE VARCHAR(200),
						YE VARCHAR(200),
						BE VARCHAR(200),
						RY VARCHAR(200),
						YB VARCHAR(200),
						BR VARCHAR(200),
						NE VARCHAR(200),
						IR_CURRENT VARCHAR(200),
						IY_CURRENT VARCHAR(200),
						IB_CURRENT VARCHAR(200),
						IN_CURRENT VARCHAR(200),
						IPE_CURRENT VARCHAR(200),
						POWER_FACTOR VARCHAR(200),
						FREQUENCY VARCHAR(200),
						CONSTRAINT PK_GENERAL_TESTING_MCCB_ID PRIMARY KEY(GENERAL_TESTING_MCCB_ID),
						CONSTRAINT FK_GENERAL_TESTING_MCCB_ID FOREIGN KEY(MCCB_ID) REFERENCES mccb(MCCB_ID) ON DELETE CASCADE
						);
									
			CREATE TABLE safety_testing_mccb(
						SAFETY_TESTING_MCCB_ID INT AUTO_INCREMENT,
						MCCB_ID INTEGER,
						RN VARCHAR(200),
						YN VARCHAR(200),
						BN VARCHAR(200),
						RE VARCHAR(200),
						YE VARCHAR(200),
						BE VARCHAR(200),
						RY VARCHAR(200),
						YB VARCHAR(200),
						BR VARCHAR(200),
						SHOCK_VOLTAGE VARCHAR(200),
						FLOOR_RESISTANCE VARCHAR(200),
						WALL_RESISTANCE VARCHAR(200),
						CONSTRAINT PK_SAFETY_TESTING_MCCB_ID PRIMARY KEY(SAFETY_TESTING_MCCB_ID),
						CONSTRAINT FK_SAFETY_TESTING_MCCB_ID FOREIGN KEY(MCCB_ID) REFERENCES mccb(MCCB_ID) ON DELETE CASCADE
						);
						

			-----------> RCBO <----------
			
			CREATE TABLE rcbo(
						RCBO_ID INT AUTO_INCREMENT,
						NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						REFERENCE_NAME VARCHAR(200),
						MANUFACTURER_NAME VARCHAR(200),
						RATING INTEGER,
						VOLTAGE INTEGER,
						NO_OF_POLES VARCHAR(200),
						CURRENT_CURVE VARCHAR(200),
						RESIDUAL_CURRENT_TYPE VARCHAR(200),
						RESIDUAL_CURRENT INTEGER,
						OUTGOING_SIZE_PHASE INTEGER,
						OUTGOING_SIZE_NEUTRAL INTEGER,
						OUTGOING_SIZE_PROTECTIVE INTEGER,
						CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,		
						CONSTRAINT PK_RCBO_ID PRIMARY KEY(RCBO_ID)	
						);
						

			CREATE TABLE general_testing_rcbo(
						GENERAL_TESTING_RCBO_ID INT AUTO_INCREMENT,
						RCBO_ID INTEGER,
						RN VARCHAR(200),
						YN VARCHAR(200),
						BN VARCHAR(200),
						RE VARCHAR(200),
						YE VARCHAR(200),
						BE VARCHAR(200),
						RY VARCHAR(200),
						YB VARCHAR(200),
						BR VARCHAR(200),
						NE VARCHAR(200),
						IR_CURRENT VARCHAR(200),
						IY_CURRENT VARCHAR(200),
						IB_CURRENT VARCHAR(200),
						IN_CURRENT VARCHAR(200),
						IPE_CURRENT VARCHAR(200),
						POWER_FACTOR VARCHAR(200),
						FREQUENCY VARCHAR(200),
						CONSTRAINT PK_GENERAL_TESTING_RCBO_ID PRIMARY KEY(GENERAL_TESTING_RCBO_ID),
						CONSTRAINT FK_GENERAL_TESTING_RCBO_ID FOREIGN KEY(RCBO_ID) REFERENCES rcbo(RCBO_ID) ON DELETE CASCADE
						);
			
			CREATE TABLE safety_testing_rcbo(
						SAFETY_TESTING_RCBO_ID INT AUTO_INCREMENT,
						RCBO_ID INTEGER,
						RN VARCHAR(200),
						YN VARCHAR(200),
						BN VARCHAR(200),
						RE VARCHAR(200),
						YE VARCHAR(200),
						BE VARCHAR(200),
						RY VARCHAR(200),
						YB VARCHAR(200),
						BR VARCHAR(200),
						SHOCK_VOLTAGE VARCHAR(200),
						FLOOR_RESISTANCE VARCHAR(200),
						WALL_RESISTANCE VARCHAR(200),
						CONSTRAINT PK_SAFETY_TESTING_RCBO_ID PRIMARY KEY(SAFETY_TESTING_RCBO_ID),
						CONSTRAINT FK_SAFETY_TESTING_RCBO_ID FOREIGN KEY(RCBO_ID) REFERENCES rcbo(RCBO_ID) ON DELETE CASCADE
						);
						
			-----------> LT Motor <----------

			CREATE TABLE lt_motor(
						MOTOR_ID INT AUTO_INCREMENT,
						NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						REFERENCE_NAME VARCHAR(200),
						MANUFACTURER_NAME VARCHAR(200),
						WINDING_CONNECTION VARCHAR(200),
						POWER_CAPACITY INTEGER,
						CURRENT_RATING INTEGER,
						VOLTAGE INTEGER,
			            NO_OF_PHASE VARCHAR(255),
			            Model INTEGER,
			            INCOMING_SIZE_PHASE INTEGER,
			            INCOMING_SIZE_NEUTRAL INTEGER,
			            INCOMING_SIZE_PROTECTIVE INTEGER,
			            INCOMING_LENGTH_PHASE INTEGER,
						INCOMING_LENGTH_NEUTRAL INTEGER,
						INCOMING_LENGTH_PROTECTIVE INTEGER,
						CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,		
						CONSTRAINT PK_MOTOR_ID PRIMARY KEY(MOTOR_ID)	
						);
			

			CREATE TABLE general_testing_lt_motor(
						GENERAL_TESTING_MOTOR_ID INT AUTO_INCREMENT,
						MOTOR_ID INTEGER,
						RE VARCHAR(200),
						YE VARCHAR(200),
						BE VARCHAR(200),
						RY VARCHAR(200),
						YB VARCHAR(200),
						BR VARCHAR(200),
						IR_CURRENT VARCHAR(200),
						IY_CURRENT VARCHAR(200),
						IB_CURRENT VARCHAR(200),
						IPE_CURRENT VARCHAR(200),
						POLARITY_R VARCHAR(200),
						POLARITY_Y VARCHAR(200),
						POLARITY_B VARCHAR(200),
						POWER_FACTOR VARCHAR(200),
						FREQUENCY VARCHAR(200),
						CONSTRAINT PK_GENERAL_TESTING_MOTOR_ID PRIMARY KEY(GENERAL_TESTING_MOTOR_ID),
						CONSTRAINT FK_GENERAL_TESTING_MOTOR_ID FOREIGN KEY(MOTOR_ID) REFERENCES lt_motor(MOTOR_ID) ON DELETE CASCADE
						);
			
			CREATE TABLE safety_testing_lt_motor(
						SAFETY_TESTING_MOTOR_ID INT AUTO_INCREMENT,
						MOTOR_ID INTEGER,
						RN VARCHAR(200),
						YN VARCHAR(200),
						BN VARCHAR(200),
						RE VARCHAR(200),
						YE VARCHAR(200),
						BE VARCHAR(200),
						RY VARCHAR(200),
						YB VARCHAR(200),
						BR VARCHAR(200),
						SHOCK_VOLTAGE VARCHAR(200),
						FLOOR_RESISTANCE VARCHAR(200),
						WALL_RESISTANCE VARCHAR(200),
						CONSTRAINT PK_SAFETY_TESTING_MOTOR_ID PRIMARY KEY(SAFETY_TESTING_MOTOR_ID),
						CONSTRAINT FK_SAFETY_TESTING_MOTOR_ID FOREIGN KEY(MOTOR_ID) REFERENCES lt_motor(MOTOR_ID) ON DELETE CASCADE
						);
            
			-----------> LIGHT <----------
			
			CREATE TABLE light(
						LIGHT_ID INT AUTO_INCREMENT,
						NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						REFERENCE_NAME VARCHAR(200),
						MANUFACTURER_NAME VARCHAR(200),
						POWER_CAPACITY VARCHAR(200),
						CURRENT_RATING INTEGER,
						VOLTAGE INTEGER,
						MODEL VARCHAR(200),
						INCOMING_SIZE_PHASE INTEGER,
						INCOMING_SIZE_NEUTRAL INTEGER,
						INCOMING_SIZE_PROTECTIVE INTEGER,
						INCOMING_LENGTH_PHASE INTEGER,
						INCOMING_LENGTH_NEUTRAL INTEGER,
						INCOMING_LENGTH_PROTECTIVE INTEGER,
						CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,		
						CONSTRAINT PK_LIGHT_ID PRIMARY KEY(LIGHT_ID)	
						);
						

			CREATE TABLE general_testing_light(
						GENERAL_TESTING_LIGHT_ID INT AUTO_INCREMENT,
						LIGHT_ID INTEGER,
						PHN VARCHAR(200),
						PHE VARCHAR(200),
						NE VARCHAR(200),
						IR_CURRENT VARCHAR(200),
						IN_CURRENT VARCHAR(200),
						IPE_CURRENT VARCHAR(200),
						POWER_FACTOR VARCHAR(200),
						FREQUENCY VARCHAR(200),
						CONSTRAINT PK_GENERAL_TESTING_LIGHT_ID PRIMARY KEY(GENERAL_TESTING_LIGHT_ID),
						CONSTRAINT FK_GENERAL_TESTING_LIGHT_ID FOREIGN KEY(LIGHT_ID) REFERENCES light(LIGHT_ID) ON DELETE CASCADE
						);
						
			CREATE TABLE safety_testing_light(
						SAFETY_TESTING_LIGHT_ID INT AUTO_INCREMENT,
						LIGHT_ID INTEGER,
						PHN VARCHAR(200),
						PHE VARCHAR(200),
						NE VARCHAR(200),
						SHOCK_VOLTAGE VARCHAR(200),
						FLOOR_RESISTANCE VARCHAR(200),
						WALL_RESISTANCE VARCHAR(200),
						CONSTRAINT PK_SAFETY_TESTING_LIGHT_ID PRIMARY KEY(SAFETY_TESTING_LIGHT_ID),
						CONSTRAINT FK_SAFETY_TESTING_LIGHT_ID FOREIGN KEY(LIGHT_ID) REFERENCES light(LIGHT_ID) ON DELETE CASCADE
						);

			-----------> Fan <----------
			
			CREATE TABLE fan(
						FAN_ID INT AUTO_INCREMENT,
						NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						REFERENCE_NAME VARCHAR(200),
						MANUFACTURER_NAME VARCHAR(200),
						POWER_CAPACITY VARCHAR(200),
						CURRENT_RATING INTEGER,
			            VOLTAGE INTEGER,
			            MODEL VARCHAR(200),
			            INCOMING_SIZE_PHASE INTEGER,
						INCOMING_SIZE_NEUTRAL INTEGER,
						INCOMING_SIZE_PROTECTIVE INTEGER,
						INCOMING_LENGTH_PHASE INTEGER,
			            INCOMING_LENGTH_NEUTRAL INTEGER,
						INCOMING_LENGTH_PROTECTIVE INTEGER,
						CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,		
						CONSTRAINT PK_FAN_ID PRIMARY KEY(FAN_ID)	
						);
						

			CREATE TABLE general_testing_fan(
						GENERAL_TESTING_FAN_ID INT AUTO_INCREMENT,
						FAN_ID INTEGER,
						PHN VARCHAR(200),
						PHE VARCHAR(200),
						NE VARCHAR(200),
						IR_CURRENT VARCHAR(200),
						IN_CURRENT VARCHAR(200),
						IPE_CURRENT VARCHAR(200),
						POWER_FACTOR VARCHAR(200),
						FREQUENCY VARCHAR(200),
						CONSTRAINT PK_GENERAL_TESTING_FAN_ID PRIMARY KEY(GENERAL_TESTING_FAN_ID),
						CONSTRAINT FK_GENERAL_TESTING_FAN_ID FOREIGN KEY(FAN_ID) REFERENCES fan(FAN_ID) ON DELETE CASCADE
						);
						
			CREATE TABLE safety_testing_fan(
						SAFETY_TESTING_FAN_ID INT AUTO_INCREMENT,
						FAN_ID INTEGER,
						PHN VARCHAR(200),
						PHE VARCHAR(200),
						NE VARCHAR(200),
						SHOCK_VOLTAGE VARCHAR(200),
						FLOOR_RESISTANCE VARCHAR(200),
						WALL_RESISTANCE VARCHAR(200),
						CONSTRAINT PK_SAFETY_TESTING_FAN_ID PRIMARY KEY(SAFETY_TESTING_FAN_ID),
						CONSTRAINT FK_SAFETY_TESTING_FAN_ID FOREIGN KEY(FAN_ID) REFERENCES fan(FAN_ID) ON DELETE CASCADE
						);
			
			


            
			-----------> Cables <----------
			
			CREATE TABLE cables(
						CABLE_ID INT AUTO_INCREMENT,
						NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						MANUFACTURER_NAME VARCHAR(200),
						CONDUCTOR_TYPE VARCHAR(200),
			            VOLTAGE INTEGER,
			            BUS_DUCT_TYPE VARCHAR(200),
						INSTALLATION_TYPE VARCHAR(200),
						BUS_DUCT_PHASE_M VARCHAR(200),
						BUS_DUCT_NEUTRAL_M VARCHAR(200),
			            BUS_DUCT_PROTECTIVE_M VARCHAR(200),
						BUS_DUCT_LENGTH VARCHAR(200),
			            POTENTIAL_TEST_REPORT VARCHAR(200),
						CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,		
						CONSTRAINT PK_CABLE_ID PRIMARY KEY(CABLE_ID)	
						);
					CREATE TABLE general_testing_cables(
						GENERAL_TESTING_CABLE_ID INT AUTO_INCREMENT,
						CABLE_ID INTEGER,
						POTENTIAL_REPORT VARCHAR(200),
						PHN VARCHAR(200),
			            PHNI_RESISTANCE VARCHAR(200),
			            PHNC_RESISTANCE VARCHAR(200),
						FLAG VARCHAR(200),
						CONSTRAINT PK_GENERAL_TESTING_CABLE_ID PRIMARY KEY(GENERAL_TESTING_CABLE_ID),
						CONSTRAINT FK_GENERAL_TESTING_CABLE_ID FOREIGN KEY(CABLE_ID) REFERENCES cables(CABLE_ID) ON DELETE CASCADE
						);	

			-----------> PAT <----------
			
			CREATE TABLE portable_appliance(
						PORTABLE_APPLIANCE_ID INT AUTO_INCREMENT,
						NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						REFERENCE_NAME VARCHAR(200),
						PORTABLE_APPLIANCE_NAME VARCHAR(200),
						MANUFACTURER_NAME VARCHAR(200),
						RATING INTEGER,
			            VOLTAGE INTEGER,
			            INSULATION_CLASS VARCHAR(200),
			            
			CREATE TABLE general_testing_pat(
						GENERAL_TESTING_PAT_ID INT AUTO_INCREMENT,
						PORTABLE_APPLIANCE_ID INTEGER,
						CLASS_TYPE VARCHAR(200),
						REFERANCE VARCHAR(200),
						VOLTAGE VARCHAR(200),
						CONTINUITY_RESISTANCE VARCHAR(200),
						INSULATION_RESISTANCE VARCHAR(200),
						LEAKAGE_CURRENT VARCHAR(200),
						FLAG VARCHAR(200),
						CONSTRAINT PK_GENERAL_TESTING_PAT_ID PRIMARY KEY(GENERAL_TESTING_PAT_ID),
						CONSTRAINT FK_GENERAL_TESTING_PAT_ID FOREIGN KEY(PORTABLE_APPLIANCE_ID) REFERENCES portable_appliance(PORTABLE_APPLIANCE_ID) ON DELETE CASCADE
						);
			
		-----------> Cable Connector <----------
		
		CREATE TABLE cableconnector(
					CABLE_ID INT AUTO_INCREMENT,
					CABLE_CONNECTOR_ID VARCHAR(200),
					FILE_NAME VARCHAR(200),
					USER_NAME VARCHAR(200),
					MANUFACTURER_NAME VARCHAR(200),
					CONDUCTOR_TYPE VARCHAR(200),
		            VOLTAGE INTEGER,
		            BUS_DUCT_TYPE VARCHAR(200),
					INSTALLATION_TYPE VARCHAR(200),
					BUS_DUCT_PHASE_M VARCHAR(200),
					BUS_DUCT_NEUTRAL_M VARCHAR(200),
		            BUS_DUCT_PROTECTIVE_M VARCHAR(200),
					BUS_DUCT_LENGTH VARCHAR(200),
		            POTENTIAL_TEST_REPORT VARCHAR(200),
		            CREATED_BY VARCHAR(200),
					CREATED_DATE DATETIME,
					UPDATED_BY VARCHAR(200),
					UPDATED_DATE DATETIME,		
					CONSTRAINT PK_CABLE_ID PRIMARY KEY(CABLE_ID)	
					);
		
		            CREATE TABLE general_testing_cable_connector(
					GENERAL_TESTING_CABLE_CONNECTOR_ID INT AUTO_INCREMENT,
					CABLE_ID INTEGER,
		            POTENTIAL_REPORT VARCHAR(200),
					PHN VARCHAR(200),
		            PHNI_RESISTANCE VARCHAR(200),
		            PHNC_RESISTANCE VARCHAR(200),
					FLAG VARCHAR(200),
					CONSTRAINT PK_GENERAL_TESTING_CABLE_CONNECTOR_ID PRIMARY KEY(GENERAL_TESTING_CABLE_CONNECTOR_ID),
					CONSTRAINT FK_GENERAL_TESTING_CABLE_CONNECTOR_ID FOREIGN KEY(CABLE_ID) REFERENCES cableconnector(CABLE_ID) ON DELETE CASCADE
					);	
            
			-----------> Transformer <----------
			
			CREATE TABLE transformer_details(
						TRANSFORMER_DETAILS_ID INT AUTO_INCREMENT,
						NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						REFERENCE_NAME VARCHAR(200),
						CAPACITY_RATING VARCHAR(200),
						SIDE_VOLTAGE_HV VARCHAR(200),
						SIDE_VOLTAGE_LV VARCHAR(200),
			            VECTOR_GROUP VARCHAR(200),
			            FAULT_CURRENT FLOAT,
			            IMPEDANCE FLOAT,
			            CONNECTED_NEUTRAL VARCHAR(200),
			            TRANSFORMER_TEST VARCHAR(200),
						CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,		
			            CONSTRAINT PK_TRANSFORMER_DETAILS_ID PRIMARY KEY(TRANSFORMER_DETAILS_ID)	
						);
			            		

			CREATE TABLE  file_upload_diagram_table(
						FILE_ID INTEGER AUTO_INCREMENT,
						FILE_NAME VARCHAR(200),
						MAIN_FILE_NAME VARCHAR(200),
						NODE_ID VARCHAR(200),
						FILE_TYPE VARCHAR(200),
						DATA LONGBLOB,
						FILE_SIZE VARCHAR(200),
						COMPONENT VARCHAR(200),
						FLAG VARCHAR(200),
						CONSTRAINT PK_FILE_ID PRIMARY KEY(FILE_ID)
						);
			
			-----------> Diesel Generator (DG) <----------
			
			CREATE TABLE diesel_generator_details(
						DG_ID INT AUTO_INCREMENT,
			            NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						REFERENCE_NAME VARCHAR(200),
						CAPACITY_RATING INTEGER,
			            VOLTAGE_RATING INTEGER,
			            FAULT_CURRENT INTEGER,
			            NEUTRAL_CONNECT VARCHAR(200),
					    DIESEL_GENERATOR_TEST_REPORT VARCHAR(200),
			            CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,
			            CONSTRAINT PK_DG_ID PRIMARY KEY(DG_ID)	
						);

			-----------> Switch Board <----------
			
			CREATE TABLE switch_board(
			    SWITCH_BOARD_ID INT AUTO_INCREMENT,
			    NODE_ID VARCHAR(200),
				FILE_NAME VARCHAR(200),
				USER_NAME VARCHAR(200),
				REFERENCE_NAME VARCHAR(200),
			    VOLTAGE VARCHAR(200),
			    OVERVOLTAGE VARCHAR(200),
			    MAKE VARCHAR(200),
			    MODEL VARCHAR(200),
			    RATING INTEGER,
			    CLASSTYPE VARCHAR(200),
			    SWITCH_BOARD_PHASE VARCHAR(200),
			    SWITCH_BOARD_NEUTRAL VARCHAR(200),
			    SWITCH_BOARD_PROTECTIVE VARCHAR(200),
			    FAULT_CURRENT INTEGER,
			    SHOCK_VOLTAGE INTEGER,
			    FLOOR_RESISTANCE INTEGER,
			    WALL_RESISTANCE INTEGER,
			    CABLE VARCHAR(200),
			    PROTECTION_TYPE VARCHAR(200),
			    HV_SYSTEM VARCHAR(200),
			    LV_SYSTEM VARCHAR(200),
			    SPD VARCHAR(200),
			    NEUTRAL VARCHAR(200),
			    VERIFIED_PROTECTIVE VARCHAR(200),
			    VERIFIED_DOUBLE VARCHAR(200),
			    VERIFIED_ISOLATION VARCHAR(200),
			    BOARD_REACH VARCHAR(200),
			    ARMS_REACH VARCHAR(200),
			    CAUTION_BARRIER VARCHAR(200),
			    SWITCH_BOARD_TEST VARCHAR(200),
				CREATED_BY VARCHAR(200),
				CREATED_DATE DATETIME,
				UPDATED_BY VARCHAR(200),
				UPDATED_DATE DATETIME,
			    CONSTRAINT PK_SWITCH_BOARD_ID PRIMARY KEY(SWITCH_BOARD_ID)
				);
			
			-----------> ACB <----------
			
			CREATE TABLE acb(
						ACB_ID INT AUTO_INCREMENT,
						NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						REFERENCE_NAME VARCHAR(200),
						MANUFACTURER_NAME VARCHAR(200),
			            OCPD_Type VARCHAR(200),
						RATING INTEGER,
						VOLTAGE VARCHAR(200),
						NO_OF_POLES VARCHAR(200),
						RELAY_MANUFACTURERS VARCHAR(200),
			            MODEL VARCHAR(200),
			            CURRENT_SETTING INTEGER,
			            OVERCURRENT INTEGER,
			            SET_TIMES INTEGER,
			            EARTH_FAULT INTEGER,
			            SET_TIME INTEGER,
			            OVERVOLTAGE VARCHAR(200),
						SETVOLTAGE INTEGER,
						SETT_TIME INTEGER,
						CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,		
						CONSTRAINT PK_ACB_ID PRIMARY KEY(ACB_ID)	
						);
						
			
			CREATE TABLE general_testing_acb(
						GENERAL_TESTING_ACB_ID INT AUTO_INCREMENT,
						ACB_ID INTEGER,
						RN VARCHAR(200),
						YN VARCHAR(200),
						BN VARCHAR(200),
						RE VARCHAR(200),
						YE VARCHAR(200),
						BE VARCHAR(200),
						RY VARCHAR(200),
						YB VARCHAR(200),
						BR VARCHAR(200),
						NE VARCHAR(200),
						IR_CURRENT VARCHAR(200),
						IY_CURRENT VARCHAR(200),
						IB_CURRENT VARCHAR(200),
						IN_CURRENT VARCHAR(200),
						IPE_CURRENT VARCHAR(200),
						POWER_FACTOR VARCHAR(200),
						FREQUENCY VARCHAR(200),
						CONSTRAINT PK_GENERAL_TESTING_ACB_ID PRIMARY KEY(GENERAL_TESTING_ACB_ID),
						CONSTRAINT FK_GENERAL_TESTING_ACB_ID FOREIGN KEY(ACB_ID) REFERENCES acb(ACB_ID) ON DELETE CASCADE
						);
						
			CREATE TABLE safety_testing_acb(
						SAFETY_TESTING_ACB_ID INT AUTO_INCREMENT,
						ACB_ID INTEGER,
						RN VARCHAR(200),
						YN VARCHAR(200),
						BN VARCHAR(200),
						RE VARCHAR(200),
						YE VARCHAR(200),
						BE VARCHAR(200),
						RY VARCHAR(200),
						YB VARCHAR(200),
						BR VARCHAR(200),
						CONSTRAINT PK_SAFETY_TESTING_ACB_ID PRIMARY KEY(SAFETY_TESTING_ACB_ID),
						CONSTRAINT FK_SAFETY_TESTING_ACB_ID FOREIGN KEY(ACB_ID) REFERENCES acb(ACB_ID) ON DELETE CASCADE
						);
			 
			 
			 -----------> EquipotentialBonding <----------

			
			CREATE TABLE equipotential_bonding(
						EQUIPBOND_ID INT AUTO_INCREMENT,
						NODE_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						REFERENCE_NAME VARCHAR(200),
						RATING INTEGER,
						SIZE INTEGER,
						SIZE_ONE VARCHAR(255), 
						CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,		
						CONSTRAINT PK_EQUIPBOND_ID PRIMARY KEY(EQUIPBOND_ID)	
						);
			            
			-----------> ProtectiveEarthConductor <----------
			
			CREATE TABLE protectiveEarthConductor(
						SAFETY_TESTING_PEC_ID INT AUTO_INCREMENT,
						CABLECONNECTOR_ID VARCHAR(200),
						FILE_NAME VARCHAR(200),
						USER_NAME VARCHAR(200),
						MAKE VARCHAR(200),
						TYPE VARCHAR(200),
						MATERIAL VARCHAR(200),
			            SIZE VARCHAR(200),
						CONDUCTOR_LENGTH VARCHAR(200),
						CONDUCTOR_RESISTANCE VARCHAR(200),
						MAX_RESISTANCE VARCHAR(200),
			            REMARKS VARCHAR(200),
			            CREATED_BY VARCHAR(200),
						CREATED_DATE DATETIME,
						UPDATED_BY VARCHAR(200),
						UPDATED_DATE DATETIME,		
						CONSTRAINT PK_SAFETY_TESTING_PEC_ID PRIMARY KEY(SAFETY_TESTING_PEC_ID)	
						);

	------------> EARTH CONNECTOR <--------------------
	
				CREATE TABLE earth_connector_table (
						EARTH_CONNECTORID INT,
						EARTH_CABLE_CONNECTORID VARCHAR(255),
						TYPE_OF_ELECTRODE VARCHAR(255),
						MATERIAL_ELECTRODE VARCHAR(255),
						SIZE_ELECTRODE VARCHAR(255),
						DEPTH_ELECTRODE VARCHAR(255),
						FILE_NAME VARCHAR(255),
						EARTH_ELECTRODE_RESISTANCE VARCHAR(255),
						COMBINED_RESISTANCE VARCHAR(255),
						 UPDATED_BY  VARCHAR(255),
						CREATED_DATE DATETIME,
						CREATED_BY VARCHAR(255),
						UPDATED_DATE DATETIME,
						NODE_ID varchar(255),
						USER_NAME VARCHAR(255),
						FLAG VARCHAR(255),
						CONSTRAINT PK_EARTH_CONNECTOR PRIMARY KEY (EARTH_CONNECTORID)
		);
		
		
		---------------> PROTECTIVE EARTH CONDUCTORS  <--------------

                  CREATE TABLE PROTECTIVE_EARTH_CONDUCTORS(
					EARTH_PROTECTIVE_CONDUCTOR_ID INT,
					NODE_ID VARCHAR(200),
					FILE_NAME VARCHAR(200),
					USER_NAME VARCHAR(200),
					EARTH_PROTECTIVE_CABLE_ID VARCHAR(200),
					MAKE VARCHAR(200),
					TYPE_FLAT_OR_BASE VARCHAR(200),
					MATERIAL VARCHAR(200),
					SIZE_TWO VARCHAR(200),
					CONDUCTOR_LENGTH INT,
					CONDUCTOR_RESISTANCE INT,
					MAX_ALLOWABLE_RESISTANCE VARCHAR(200),
					REMARKS VARCHAR(200),
					UPDATED_BY VARCHAR(200),
					CREATED_DATE DATETIME,
					CREATED_BY VARCHAR(200),
					UPDATED_DATE DATETIME,
					CONSTRAINT EARTH_PROTECTIVE_CONDUCTOR_ID PRIMARY KEY (EARTH_PROTECTIVE_CONDUCTOR_ID)
					);



----------------->  EARTH ELECTRODE <------------------


				CREATE TABLE earth_electrode(
				 EARTH_ELECTRODEID INT,
				 REFERENCE_NAME VARCHAR(250),
				 TYPE_OF_ELECTRODE VARCHAR(200),
				 MATERIAL_ELECTRODE VARCHAR(200),
				 SIZE_ELECTRODE VARCHAR(200),
				 DEPTH_ELECTRODE VARCHAR(200),
				 FILE_NAME VARCHAR(200),
				 EARTH_ELECTRODE_RESISTANCE VARCHAR(200),
				 COMBINED_RESISTANCE VARCHAR(200),
				 NODE_ID VARCHAR(200),
				 USER_NAME VARCHAR(200),
				 FLAG VARCHAR(200),
				 UPDATED_BY VARCHAR(200),
				 CREATED_DATE DATETIME,
				 CREATED_BY VARCHAR(200),
				 UPDATED_DATE DATETIME,
				 CONSTRAINT  EARTH_ELECTRODEID PRIMARY KEY( EARTH_ELECTRODEID)
				);

	




	
	
